{
  "cookies": [
    {
      "name": "li_sugr",
      "value": "1b5d9216-8963-49f6-b0ba-86fd015eceea",
      "domain": ".linkedin.com",
      "path": "/",
      "expires": 1769527630.461026,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "bcookie",
      "value": "\"v=2&472830e4-bbb5-4eed-80a5-2a203daf4671\"",
      "domain": ".linkedin.com",
      "path": "/",
      "expires": 1793287630.461079,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "lidc",
      "value": "\"b=TGST01:s=T:r=T:a=T:p=T:g=3757:u=1:x=1:i=1761751568:t=1761837968:v=2:sig=AQFfckM8IMf3KLRbGFcRU_IE0I0kWulh\"",
      "domain": ".linkedin.com",
      "path": "/",
      "expires": 1761837968.590705,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "UserMatchHistory",
      "value": "AQI62bZ0lM1ScgAAAZowk5MHVlpSlIapfoXQvVAC697C5joka_quD4rGpBVcY_3HVtiiMo5iEDVnpg",
      "domain": ".linkedin.com",
      "path": "/",
      "expires": 1764343568.874372,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "AnalyticsSyncHistory",
      "value": "AQIHC74KPhvzAQAAAZowk5MH1Z4qbjRzY7iyCM7l8y-V9zfFuRvFA3ZCObsxS9lurN-geUHye6LOiu3EokByWQ",
      "domain": ".linkedin.com",
      "path": "/",
      "expires": 1764343568.874389,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "bscookie",
      "value": "\"v=1&20251029152609f8d3a814-bf3f-47bf-8aa0-930f6d45a88eAQH1K7qtJZGMm2bk4uZgA9uUdtFddy_x\"",
      "domain": ".www.linkedin.com",
      "path": "/",
      "expires": 1793287570.150958,
      "httpOnly": true,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "CLID",
      "value": "f3b2220e14f145abb4b6680ba6f84c27.20251029.20261029",
      "domain": "www.clarity.ms",
      "path": "/",
      "expires": 1793287572.588224,
      "httpOnly": true,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "ajs_user_id",
      "value": "null",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1793287630,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "ajs_group_id",
      "value": "null",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1793287630,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "ajs_anonymous_id",
      "value": "%224c25403c-eb94-4047-bd19-b1f6fe163e44%22",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1793287630,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "__cf_bm",
      "value": "d28bI9Cokv9dwNSLSz2KOFnNalwvys4wPFLSVPLGPlA-1761751573-1.0.1.1-vd2bbEcfkInQ1RN049bh.yv1ECHXC02VA8w5ck.hnsKs3Avlq_Gmyldwf_uUhUo51jEScqhz6zuwoYvEjc9EGFs50xhg3VO4HHvEGpUPFz8",
      "domain": ".apollo.io",
      "path": "/",
      "expires": 1761753372.61923,
      "httpOnly": true,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "__cf_bm",
      "value": "rEtdJDM1SyyJRaO3sZWQmSWV9NndtLq_UwDo5x5UU5s-1761751573-1.0.1.1-D1nuiJrs128PP_YdQNyRvwBB7cBL0Fnizowg9PgAILxUG47i6oYc2T9wett1z3O02kRWYJwUR4mBpgZKIYsriNJKzBIHmP2toh.o2oaTEb0",
      "domain": ".g2.com",
      "path": "/",
      "expires": 1761753372.621048,
      "httpOnly": true,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "_ga",
      "value": "GA1.1.1002863039.1761751573",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1796311630.036662,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "_fbp",
      "value": "fb.1.1761751572852.351244795951290924",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1769527633,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "muc_ads",
      "value": "35d9a39b-2291-4896-b5d1-d4e2976ed7c8",
      "domain": ".t.co",
      "path": "/",
      "expires": 1796311572.962678,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "guest_id_marketing",
      "value": "v1%3A176175157325314794",
      "domain": ".twitter.com",
      "path": "/",
      "expires": 1796311572.973255,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "guest_id_ads",
      "value": "v1%3A176175157325314794",
      "domain": ".twitter.com",
      "path": "/",
      "expires": 1796311572.973294,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "personalization_id",
      "value": "\"v1_kU8ZsP90fzsR1Nkxk6gugg==\"",
      "domain": ".twitter.com",
      "path": "/",
      "expires": 1796311572.97332,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "guest_id",
      "value": "v1%3A176175157325314794",
      "domain": ".twitter.com",
      "path": "/",
      "expires": 1796311572.973334,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "__cf_bm",
      "value": "GoYVXeyHESnylU2VuLzJMrkHO74zggTGfAaRpMLz5xY-1761751573-1.0.1.1-eb7ZiAGwqBV6h7wTti1Pzc2XsvKRWjqgEeihYOMvuRZbpt7SOs2AZNwRlPLvZIYVqo2ew38vnrvWBAuOG2sTt8XtJJ8gZEtG3mUAvnD2uq8",
      "domain": ".hcaptcha.com",
      "path": "/",
      "expires": 1761753373.117276,
      "httpOnly": true,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "SM",
      "value": "T",
      "domain": ".c.clarity.ms",
      "path": "/",
      "expires": -1,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "MUID",
      "value": "3029B4C7717A657C3083A253757A6B7A",
      "domain": ".clarity.ms",
      "path": "/",
      "expires": 1795447573.255498,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "_hp2_ses_props.1546758222",
      "value": "%7B%22r%22%3A%22https%3A%2F%2Fauth.wati.io%2F%22%2C%22ts%22%3A1761751572582%2C%22d%22%3A%22live.wati.io%22%2C%22h%22%3A%22%2Flogin%22%7D",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1761753433,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "IDE",
      "value": "AHWqTUk6XuMd1sRUAAt-KSLJ-eWpGNWOZiDix5SnK3c8Z_-YkJsehhXXtBiRzurW",
      "domain": ".doubleclick.net",
      "path": "/",
      "expires": 1796311573.305747,
      "httpOnly": true,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "_clck",
      "value": "dwgrkm%5E2%5Eg0k%5E0%5E2128",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1793287573,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "MUID",
      "value": "276B5A8DEC82676B2B934C19EDE066A0",
      "domain": ".bing.com",
      "path": "/",
      "expires": 1795447574.853995,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "MR",
      "value": "0",
      "domain": ".c.bing.com",
      "path": "/",
      "expires": 1762356374.854052,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "SRM_B",
      "value": "276B5A8DEC82676B2B934C19EDE066A0",
      "domain": ".c.bing.com",
      "path": "/",
      "expires": 1795447574.854073,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "_rdt_uuid",
      "value": "1761751572521.76864c92-bb58-410b-b856-dcf17e46fd4c",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1769527630,
      "httpOnly": false,
      "secure": true,
      "sameSite": "Strict"
    },
    {
      "name": "tenantId",
      "value": "1037246",
      "domain": ".wati.io",
      "path": "/",
      "expires": -1,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "token",
      "value": "4cjjSZKqfuTiWqQiWed_bdQsEoA0th6ZYQCcsv96Qh7YWVwayXXr2YxiQUdvoo8fk0E-CYsuRS90DXW7ReuipQFhVSo6ve4WlWQXyQo",
      "domain": ".wati.io",
      "path": "/",
      "expires": -1,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "AWSALBCORS",
      "value": "471pfaOkswiS3GmDPgCNH2DcoN0RwWQhv97cuefT1j2O2spM2e207BFJpGDOEu3fz9fktUHtsnzKE2U8UV46gq7p/PMPCpz9crrmfBgbOaxpcwC9ridl1VJVNupr",
      "domain": "analytex.userpilot.io",
      "path": "/",
      "expires": 1762356432.307368,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "intercom-id-at2ayd3s",
      "value": "b4fedc83-0d26-47d1-bcfe-c6118f45c789",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1785081632,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "intercom-device-id-at2ayd3s",
      "value": "d6454e8b-5553-4df4-b7a3-a11127d90963",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1785081638,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "_hp2_id.1546758222",
      "value": "%7B%22userId%22%3A%228837344577914497%22%2C%22pageviewId%22%3A%224724275543207798%22%2C%22sessionId%22%3A%222531952508633155%22%2C%22identity%22%3A%22visionsjersey%40gmail.com%22%2C%22trackerVersion%22%3A%224.0%22%2C%22identityField%22%3Anull%2C%22isIdentified%22%3A1%7D",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1795829235,
      "httpOnly": false,
      "secure": true,
      "sameSite": "None"
    },
    {
      "name": "_clsk",
      "value": "veckqq%5E1761751633833%5E2%5E1%5Ed.clarity.ms%2Fcollect",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1761838033,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "_ga_HYL717ZD73",
      "value": "GS2.1.s1761751572$o1$g1$t1761751634$j60$l0$h0",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1796311634.6547,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "_ga_F594FDD5J4",
      "value": "GS2.1.s1761751572$o1$g1$t1761751637$j60$l0$h372454121",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1796311637.542976,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "_gcl_au",
      "value": "1.1.1115743078.1761751572.36679798.1761751638.1761751637",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1769527572,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "_ga_G2E2VQFXP0",
      "value": "GS2.1.s1761751572$o1$g1$t1761751637$j57$l0$h0",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1796311637.551438,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "intercom-session-at2ayd3s",
      "value": "anJ6aFdObE92N0hVTDB1WVA4d3FYWml5WkNsZUY2anp2aG1zd3ZHTy9vbTFTSCtNdjY4RWdMOFlaNk9ya2ZmTlhRWXE3NmlUeUtST1lzVS8ybmY3anlzL2pCa1p0a25VcDAzbDVsc1R0WFU9LS0wV1FTeHZBaTh3SWdXQjVBbEhhaVh3PT0=--f95ed619d5f6ff916e9abf59550f4091fb2131b3",
      "domain": ".wati.io",
      "path": "/",
      "expires": 1762356438,
      "httpOnly": false,
      "secure": false,
      "sameSite": "Lax"
    },
    {
      "name": "ak_eu_2QYTBe",
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyIkIjpbMSwiNjhmOTJlZDU1ZTEwMzc2YTVjMjhlY2NlIl0sImlhdCI6MTc2MTc1MTYzOH0.zB1Ewnrd0ynCdYoRtBXcRbgpj6kwBJIZ9fD30ffXPnY",
      "domain": "feedback.wati.io",
      "path": "/",
      "expires": 1793287638.318472,
      "httpOnly": true,
      "secure": true,
      "sameSite": "None"
    }
  ],
  "origins": [
    {
      "origin": "https://live.wati.io",
      "localStorage": [
        {
          "name": "ajs_group_id",
          "value": "null"
        },
        {
          "name": "lowBalanceCreditPopupTime",
          "value": ""
        },
        {
          "name": "ajs_group_properties",
          "value": "{}"
        },
        {
          "name": "statsig.session_id.1070914477",
          "value": "{\"sessionID\":\"053cedc3-1c84-41e5-9657-4c94505a9b10\",\"startTime\":1761751571713,\"lastUpdate\":1761751639849}"
        },
        {
          "name": "userSearch",
          "value": "{\"visionsjersey@gmail.com\":{\"searchString\":\"\",\"searchOptionType\":0}}"
        },
        {
          "name": "isFlexiTrialExpired",
          "value": "true"
        },
        {
          "name": "_gcl_ls",
          "value": "{\"schema\":\"gcl\",\"version\":1,\"gcl_ctr\":{\"value\":{\"value\":2,\"timeouts\":0,\"creationTimeMs\":1761751630075},\"expires\":1769527630075}}"
        },
        {
          "name": "dreamdataio.f6a2780d-352d-4833-b565-16cc4f2519ba.inProgress",
          "value": "{}"
        },
        {
          "name": "numOfAppearances",
          "value": "1"
        },
        {
          "name": "fp-uid",
          "value": "15bc764552878e4045e167dabc88a595"
        },
        {
          "name": "isShopifyAppInstalled",
          "value": "false"
        },
        {
          "name": "eventQueue",
          "value": "[]"
        },
        {
          "name": "statsig.cached.evaluations.263528240",
          "value": "{\"source\":\"Network\",\"data\":\"{\\\"feature_gates\\\":{\\\"3556498\\\":{\\\"name\\\":\\\"3556498\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4QxAtYhh98CEwN9qaUVMBO\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3690731\\\":{\\\"name\\\":\\\"3690731\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3m9pxrG88h6NycHb87dlmj:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"19047894\\\":{\\\"name\\\":\\\"19047894\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2wjPFdrMaU7qtS4crBnDBN:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"24118183\\\":{\\\"name\\\":\\\"24118183\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Fdu4GRzg83EHqU1vvf2Ab:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"29873538\\\":{\\\"name\\\":\\\"29873538\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2NR7myiK0q8QK7pn4PevxP:100.00:11\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"35912392\\\":{\\\"name\\\":\\\"35912392\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"36309801\\\":{\\\"name\\\":\\\"36309801\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1Ms76z5gIXs2PWqKWuIxoj:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"56825500\\\":{\\\"name\\\":\\\"56825500\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"65385529\\\":{\\\"name\\\":\\\"65385529\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6NLPNajfxku13elL03Vohp:0.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"117744020\\\":{\\\"name\\\":\\\"117744020\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"134943526\\\":{\\\"name\\\":\\\"134943526\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3PbrYF0EO3o9O3uEYLXADv:0.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"137429910\\\":{\\\"name\\\":\\\"137429910\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"151951309\\\":{\\\"name\\\":\\\"151951309\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"176189447\\\":{\\\"name\\\":\\\"176189447\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2jyC65bRjuI3FHQqJHG01J:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"192226381\\\":{\\\"name\\\":\\\"192226381\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"44lHOgtXF4TtxCw8hrYtQv:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"213795005\\\":{\\\"name\\\":\\\"213795005\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"237057907\\\":{\\\"name\\\":\\\"237057907\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"frFbSWQXoGvd93MFKPomj\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"250944335\\\":{\\\"name\\\":\\\"250944335\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"257859813\\\":{\\\"name\\\":\\\"257859813\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"276988480\\\":{\\\"name\\\":\\\"276988480\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"284158622\\\":{\\\"name\\\":\\\"284158622\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"291856187\\\":{\\\"name\\\":\\\"291856187\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"330054939\\\":{\\\"name\\\":\\\"330054939\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4K1XOPZyLEDHXddCcbXK0t\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"338390626\\\":{\\\"name\\\":\\\"338390626\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3YlR6wlomAcWeKeYa4OOgp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"341488802\\\":{\\\"name\\\":\\\"341488802\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3El8Il7Wkgkwbempfcjy1c:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"342433810\\\":{\\\"name\\\":\\\"342433810\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"346372535\\\":{\\\"name\\\":\\\"346372535\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3irkhfT3OLvIVlk2Ks5jxW:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"354295315\\\":{\\\"name\\\":\\\"354295315\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"370982552\\\":{\\\"name\\\":\\\"370982552\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"387795292\\\":{\\\"name\\\":\\\"387795292\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ykgj4HSe2nyq6qNOmHBWP:0.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"397098067\\\":{\\\"name\\\":\\\"397098067\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1RIDJHI2dx6jXk7iKPvLQt:0.00:9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"448919431\\\":{\\\"name\\\":\\\"448919431\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"471803185\\\":{\\\"name\\\":\\\"471803185\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"489203531\\\":{\\\"name\\\":\\\"489203531\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2rBgJwGK0Jq5ByVr4n6d0v:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"549937556\\\":{\\\"name\\\":\\\"549937556\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"556096570\\\":{\\\"name\\\":\\\"556096570\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"569576755\\\":{\\\"name\\\":\\\"569576755\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5EZLKO5Z0KCKp0TFCGddHI:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"586990305\\\":{\\\"name\\\":\\\"586990305\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"594541863\\\":{\\\"name\\\":\\\"594541863\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7f9mzIJLrstdBQwbEADfuG:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"619413141\\\":{\\\"name\\\":\\\"619413141\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1xqICj0w1e3oNwlXaSM60Z:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"646508337\\\":{\\\"name\\\":\\\"646508337\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2nkJ2RERJeHQYdDO1qMB9B:100.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"662641987\\\":{\\\"name\\\":\\\"662641987\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4UBQHuB5cpfiJ6IPohCZRf:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"670288179\\\":{\\\"name\\\":\\\"670288179\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"753150926\\\":{\\\"name\\\":\\\"753150926\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3V5bW6vQAzzHaqn86P2JzV\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"796473002\\\":{\\\"name\\\":\\\"796473002\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"803274003\\\":{\\\"name\\\":\\\"803274003\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"805204947\\\":{\\\"name\\\":\\\"805204947\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"820312485\\\":{\\\"name\\\":\\\"820312485\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"821183823\\\":{\\\"name\\\":\\\"821183823\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"825413842\\\":{\\\"name\\\":\\\"825413842\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"853733906\\\":{\\\"name\\\":\\\"853733906\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"864205161\\\":{\\\"name\\\":\\\"864205161\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"snV6cM0pQy8Vdr6KxXSr5:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"874254006\\\":{\\\"name\\\":\\\"874254006\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"883485656\\\":{\\\"name\\\":\\\"883485656\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"898248959\\\":{\\\"name\\\":\\\"898248959\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1dbRLq0bIQtPlamEkLE3Ux:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"904719398\\\":{\\\"name\\\":\\\"904719398\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"923541420\\\":{\\\"name\\\":\\\"923541420\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"926323500\\\":{\\\"name\\\":\\\"926323500\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"931446997\\\":{\\\"name\\\":\\\"931446997\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"949752030\\\":{\\\"name\\\":\\\"949752030\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5avBVSgQUyFeagdgjHfcnZ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"952116887\\\":{\\\"name\\\":\\\"952116887\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"955008015\\\":{\\\"name\\\":\\\"955008015\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7zDPHF9SQ4CkgOWE2pUqGc:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"981305169\\\":{\\\"name\\\":\\\"981305169\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"997192322\\\":{\\\"name\\\":\\\"997192322\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7HWYnF5KFwJUSMaUoJJJUW:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1021178329\\\":{\\\"name\\\":\\\"1021178329\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1029736013\\\":{\\\"name\\\":\\\"1029736013\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1037676453\\\":{\\\"name\\\":\\\"1037676453\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1ok2QE9y5vjuJIbDSlMIQ2:0.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1062775714\\\":{\\\"name\\\":\\\"1062775714\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1070934160\\\":{\\\"name\\\":\\\"1070934160\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"qC5sNXInPvgR6w7XrvyWQ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1085020658\\\":{\\\"name\\\":\\\"1085020658\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1103331817\\\":{\\\"name\\\":\\\"1103331817\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1108276615\\\":{\\\"name\\\":\\\"1108276615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1119588136\\\":{\\\"name\\\":\\\"1119588136\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1120956135\\\":{\\\"name\\\":\\\"1120956135\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4I27WOJBiPIMoNkKSGbK52:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1176684932\\\":{\\\"name\\\":\\\"1176684932\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1204453427\\\":{\\\"name\\\":\\\"1204453427\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3KD2OHAXsNbrQP5Vm3DdVm\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1205795392\\\":{\\\"name\\\":\\\"1205795392\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1217919578\\\":{\\\"name\\\":\\\"1217919578\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1235342138\\\":{\\\"name\\\":\\\"1235342138\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4A3rsJZD9kQ6zmbb4qk7cC:100.00:6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1237411615\\\":{\\\"name\\\":\\\"1237411615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"K05Ct90CVKv6G0pMV3cfr:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1246796578\\\":{\\\"name\\\":\\\"1246796578\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3KL6C3vNGacF1M2FmITMCU:100.00:12\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1258581238\\\":{\\\"name\\\":\\\"1258581238\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"CO6B3EGu0BmKdTpgWnaoG:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1272450172\\\":{\\\"name\\\":\\\"1272450172\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ghEJv4Qt4UlUB3tJFxeyJ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1319726583\\\":{\\\"name\\\":\\\"1319726583\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1347676252\\\":{\\\"name\\\":\\\"1347676252\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1389735471\\\":{\\\"name\\\":\\\"1389735471\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4Vih3jQcufZPYsZnPTAfIp:0.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1398813458\\\":{\\\"name\\\":\\\"1398813458\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3atcKMrHOHa4PXJF3Dfhel:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1417562847\\\":{\\\"name\\\":\\\"1417562847\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1420189732\\\":{\\\"name\\\":\\\"1420189732\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1442403526\\\":{\\\"name\\\":\\\"1442403526\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7peUzjkYeOFgp2mRfXbzih:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1448588679\\\":{\\\"name\\\":\\\"1448588679\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5W1Kc8G6GGT3ktlUmqgRV5:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1468072136\\\":{\\\"name\\\":\\\"1468072136\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2XairiP46gB0I63k5tNP5B\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1472468720\\\":{\\\"name\\\":\\\"1472468720\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1474535541\\\":{\\\"name\\\":\\\"1474535541\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1494595529\\\":{\\\"name\\\":\\\"1494595529\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4LIiVUoSB0jFxgrxeniaCX:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1495765263\\\":{\\\"name\\\":\\\"1495765263\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1vlIg8rrHas7k2Mcw8IeDM:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1506699038\\\":{\\\"name\\\":\\\"1506699038\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7IfWJjlKuYCf49jfZXoP6E:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1535466856\\\":{\\\"name\\\":\\\"1535466856\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"1548368528\\\":{\\\"name\\\":\\\"1548368528\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1556961638\\\":{\\\"name\\\":\\\"1556961638\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1556962082\\\":{\\\"name\\\":\\\"1556962082\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1561594747\\\":{\\\"name\\\":\\\"1561594747\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1562372427\\\":{\\\"name\\\":\\\"1562372427\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1568030702\\\":{\\\"name\\\":\\\"1568030702\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1578064793\\\":{\\\"name\\\":\\\"1578064793\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1626539492\\\":{\\\"name\\\":\\\"1626539492\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Bbd1GvsyMJwZzi1WKpEcp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1660837176\\\":{\\\"name\\\":\\\"1660837176\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3pKuvniNGzHQdKs9EDzlG2:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1676271509\\\":{\\\"name\\\":\\\"1676271509\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1708913788\\\":{\\\"name\\\":\\\"1708913788\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6cugV7tpqu5LewxpOQ4ipb:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1773058922\\\":{\\\"name\\\":\\\"1773058922\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4Ix7l4IWyemZPlAsj6YT7n\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1812806533\\\":{\\\"name\\\":\\\"1812806533\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"34OumqQVT3dSMvQIJzE2Oh\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1829974633\\\":{\\\"name\\\":\\\"1829974633\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1854107166\\\":{\\\"name\\\":\\\"1854107166\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1868168216\\\":{\\\"name\\\":\\\"1868168216\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1884412781\\\":{\\\"name\\\":\\\"1884412781\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1886644922\\\":{\\\"name\\\":\\\"1886644922\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6mFViKQ4CtvciFFDCfJtb0\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1895315665\\\":{\\\"name\\\":\\\"1895315665\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1906469985\\\":{\\\"name\\\":\\\"1906469985\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1914340998\\\":{\\\"name\\\":\\\"1914340998\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1919743132\\\":{\\\"name\\\":\\\"1919743132\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3YmZaHNTUy2v0E7vOVgqnV:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1927985405\\\":{\\\"name\\\":\\\"1927985405\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1935132290\\\":{\\\"name\\\":\\\"1935132290\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1938431766\\\":{\\\"name\\\":\\\"1938431766\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1PpEh51QekOg48dIyy0EhS:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1947021730\\\":{\\\"name\\\":\\\"1947021730\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1967442834\\\":{\\\"name\\\":\\\"1967442834\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5cJjL9m5KKGxxuvmba9b7m\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1994770822\\\":{\\\"name\\\":\\\"1994770822\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2004573773\\\":{\\\"name\\\":\\\"2004573773\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2034771199\\\":{\\\"name\\\":\\\"2034771199\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7kvuwiskCBVu90bHHeiO73\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2050862886\\\":{\\\"name\\\":\\\"2050862886\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2077485919\\\":{\\\"name\\\":\\\"2077485919\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2089382773\\\":{\\\"name\\\":\\\"2089382773\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6HzltDPRzvdzEPBEpEgtGX:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2090111152\\\":{\\\"name\\\":\\\"2090111152\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2bwNHNbaVSviQLaFSnx507:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2102055349\\\":{\\\"name\\\":\\\"2102055349\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2105601866\\\":{\\\"name\\\":\\\"2105601866\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2118537617\\\":{\\\"name\\\":\\\"2118537617\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3o8X3FGwxrPeg1oNE2H51g\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2139079692\\\":{\\\"name\\\":\\\"2139079692\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2148008700\\\":{\\\"name\\\":\\\"2148008700\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7dWLGe4ucjPtAT5TOuXHLb\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2160693005\\\":{\\\"name\\\":\\\"2160693005\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2179063667\\\":{\\\"name\\\":\\\"2179063667\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2FAzrpzaTbXFGxkuNi68gs\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2180353316\\\":{\\\"name\\\":\\\"2180353316\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ZuSFJNqAw7KVdvr9MAyGL\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2182141949\\\":{\\\"name\\\":\\\"2182141949\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2189106183\\\":{\\\"name\\\":\\\"2189106183\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2211880815\\\":{\\\"name\\\":\\\"2211880815\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1rP5aaFBnLOHosA9aZPB6g:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2241558617\\\":{\\\"name\\\":\\\"2241558617\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"48NYlf9Gl9BHiUahXyYjBh:100.00:5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2263396675\\\":{\\\"name\\\":\\\"2263396675\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2263963260\\\":{\\\"name\\\":\\\"2263963260\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2297330149\\\":{\\\"name\\\":\\\"2297330149\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3fI9Mfd26G1Ie2DkX8SCkl\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2304477102\\\":{\\\"name\\\":\\\"2304477102\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5C6p2DDRZeEWKurvzT44hP:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2320160280\\\":{\\\"name\\\":\\\"2320160280\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7z8FWDSuRGijet8IvuNRzk:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2328991501\\\":{\\\"name\\\":\\\"2328991501\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2335627606\\\":{\\\"name\\\":\\\"2335627606\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4AqN4yVPWVAiJbp82VnWad:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2336798793\\\":{\\\"name\\\":\\\"2336798793\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5gSZHjvtlA1BfCvex6dDOR:100.00:80\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2338023897\\\":{\\\"name\\\":\\\"2338023897\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1MHJbJuhF20wKWtTVu13RV\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2349827811\\\":{\\\"name\\\":\\\"2349827811\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7wbVSn29iDgMQPOPjbXIYE\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2353314921\\\":{\\\"name\\\":\\\"2353314921\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2362591192\\\":{\\\"name\\\":\\\"2362591192\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2442533097\\\":{\\\"name\\\":\\\"2442533097\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4qGqzfb0MRU7fvMU9mZFl\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2444721653\\\":{\\\"name\\\":\\\"2444721653\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5PltwB1eF9UmeIRaULNl6p:100.00:22\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2458303051\\\":{\\\"name\\\":\\\"2458303051\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2459650299\\\":{\\\"name\\\":\\\"2459650299\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"32vEIEcCor82a5Koga9Avp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489235331\\\":{\\\"name\\\":\\\"2489235331\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489452866\\\":{\\\"name\\\":\\\"2489452866\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4jqWTV1DB0NzsHhlKy0mvg:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[{\\\"gate\\\":\\\"nrF4jgDvhZQwSWreFpseRLLbdgZG3CqNgVICBnuW1id\\\",\\\"gateValue\\\":\\\"true\\\",\\\"ruleID\\\":\\\"6cugV7tpqu5LewxpOQ4ipb:100.00:8\\\"}]},\\\"2496433416\\\":{\\\"name\\\":\\\"2496433416\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1DX12NlFcgY81MCnIJ1Zun\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2502667786\\\":{\\\"name\\\":\\\"2502667786\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1K1HvRqu38SBPWcab6U9y8:0.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2506326034\\\":{\\\"name\\\":\\\"2506326034\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3lrRtMXSmuLEXtvZ5bYShP\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2527521448\\\":{\\\"name\\\":\\\"2527521448\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2C3gETnlz62XUeHmjBeGDJ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2528449374\\\":{\\\"name\\\":\\\"2528449374\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3kTttiGlGQmtUJNC5Lce3W\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2529475342\\\":{\\\"name\\\":\\\"2529475342\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2540052713\\\":{\\\"name\\\":\\\"2540052713\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6j3Bd5pO6BxQG8QvTtuPJh\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2544337905\\\":{\\\"name\\\":\\\"2544337905\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5FmuLtr57GyxoPs8ixvJF7:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2565877796\\\":{\\\"name\\\":\\\"2565877796\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"SiLWvEUWpPDGSRik4Eq65:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2568255691\\\":{\\\"name\\\":\\\"2568255691\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1O5qOMGxClQAnbbWUqXUqX\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2656813585\\\":{\\\"name\\\":\\\"2656813585\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"q5IO7PaiBvNJ1xLRULsd5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2667240513\\\":{\\\"name\\\":\\\"2667240513\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7MaKb7oXFgxjWLm9FVnjwy\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2678683376\\\":{\\\"name\\\":\\\"2678683376\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3ietdPLnmNOMINVXohy4gv\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2706537359\\\":{\\\"name\\\":\\\"2706537359\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2716921513\\\":{\\\"name\\\":\\\"2716921513\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2738213561\\\":{\\\"name\\\":\\\"2738213561\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2760099186\\\":{\\\"name\\\":\\\"2760099186\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3xD0LTPHYvmbCm8UB665l0:100.00:10\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2774466021\\\":{\\\"name\\\":\\\"2774466021\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2791203086\\\":{\\\"name\\\":\\\"2791203086\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2797658677\\\":{\\\"name\\\":\\\"2797658677\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2799938645\\\":{\\\"name\\\":\\\"2799938645\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"ImkACYRhVeMhDLzUMI4hF\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2800814367\\\":{\\\"name\\\":\\\"2800814367\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2LoicVadZlYnH9kwaI6XAV\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2812329042\\\":{\\\"name\\\":\\\"2812329042\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2836004458\\\":{\\\"name\\\":\\\"2836004458\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"l1LPn2F0idXpS5Mvjyo2c\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2857545436\\\":{\\\"name\\\":\\\"2857545436\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2865622437\\\":{\\\"name\\\":\\\"2865622437\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2887036538\\\":{\\\"name\\\":\\\"2887036538\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2903204993\\\":{\\\"name\\\":\\\"2903204993\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2903855436\\\":{\\\"name\\\":\\\"2903855436\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"23h9cSkXIwWPb9icf98AlN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2923228060\\\":{\\\"name\\\":\\\"2923228060\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4oAzfSaLJS75pKMPxuwd2w:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2944538919\\\":{\\\"name\\\":\\\"2944538919\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3jCuzilPPBXsSsDIP0pfDs:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2954467846\\\":{\\\"name\\\":\\\"2954467846\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2955801362\\\":{\\\"name\\\":\\\"2955801362\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"EpkfArs8xqCIxEWeYzIi3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2963199434\\\":{\\\"name\\\":\\\"2963199434\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4IdDkqYOvftwWOfFFVdYsn\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2990421729\\\":{\\\"name\\\":\\\"2990421729\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3085682210\\\":{\\\"name\\\":\\\"3085682210\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4yo6I9Q5IpIy9KLFuLlkeP:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3141309457\\\":{\\\"name\\\":\\\"3141309457\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3144147760\\\":{\\\"name\\\":\\\"3144147760\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4fxxtLlTOdoiTj4Aq0HSzs:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3174538403\\\":{\\\"name\\\":\\\"3174538403\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3191221983\\\":{\\\"name\\\":\\\"3191221983\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3194979216\\\":{\\\"name\\\":\\\"3194979216\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3215096882\\\":{\\\"name\\\":\\\"3215096882\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"3221432098\\\":{\\\"name\\\":\\\"3221432098\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4NrF0VljZ6Usu4DSwupLGP\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3244486900\\\":{\\\"name\\\":\\\"3244486900\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3250220129\\\":{\\\"name\\\":\\\"3250220129\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"PpKjd6sAB17aMbc5c4X1H:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3250418731\\\":{\\\"name\\\":\\\"3250418731\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3273802703\\\":{\\\"name\\\":\\\"3273802703\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"78CdH73U2fdTwW33YzxVzE\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3286753640\\\":{\\\"name\\\":\\\"3286753640\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3292969639\\\":{\\\"name\\\":\\\"3292969639\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3298704730\\\":{\\\"name\\\":\\\"3298704730\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2hvJFWwLqAZ3kDABskH9eX:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3301231973\\\":{\\\"name\\\":\\\"3301231973\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3325445310\\\":{\\\"name\\\":\\\"3325445310\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3330616214\\\":{\\\"name\\\":\\\"3330616214\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"Y5eZ0Y1Yz7316MMcDP4Vk:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3347230130\\\":{\\\"name\\\":\\\"3347230130\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"5OZNX9vmjUkm8L2uNqiE0Y\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3357819914\\\":{\\\"name\\\":\\\"3357819914\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7iAZ39zj8sabQTtTRGwNqv:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3358625901\\\":{\\\"name\\\":\\\"3358625901\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3373495869\\\":{\\\"name\\\":\\\"3373495869\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4s1SRFHxk70rmXXEyCR7GE:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3409438888\\\":{\\\"name\\\":\\\"3409438888\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3M5ghQBOpYABxdGEXMXRHF\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3456074481\\\":{\\\"name\\\":\\\"3456074481\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6itxdXWr8kMAhXcH63vdjP:0.00:18\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3476679401\\\":{\\\"name\\\":\\\"3476679401\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3481625769\\\":{\\\"name\\\":\\\"3481625769\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2GMXoP8uI1wvGbAdZAK8bH\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3495695983\\\":{\\\"name\\\":\\\"3495695983\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5j9Uy3Sub5RkIH84Db9VDt:100.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3509124063\\\":{\\\"name\\\":\\\"3509124063\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3517453746\\\":{\\\"name\\\":\\\"3517453746\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3NZ62QpiIpAMQ2zziuX68h:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3529694804\\\":{\\\"name\\\":\\\"3529694804\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3s98XbQC3LhAbEdNGAn9LB:50.00:13\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3535936328\\\":{\\\"name\\\":\\\"3535936328\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"NwgJZZjSjpyHcw2Q1FDgf\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3538762292\\\":{\\\"name\\\":\\\"3538762292\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3TZYAkDStPgw1xTQpExhY1:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3571117319\\\":{\\\"name\\\":\\\"3571117319\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3585785973\\\":{\\\"name\\\":\\\"3585785973\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2UjFM6N90ICj6rykms968t:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3587105173\\\":{\\\"name\\\":\\\"3587105173\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"45V8cm3Jl76aiv9lVtGM7J\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3591679915\\\":{\\\"name\\\":\\\"3591679915\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4532ELB7rjScS8ZqRXmPmO:100.00:5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3599883158\\\":{\\\"name\\\":\\\"3599883158\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7iAjw9P7uYC2l6D5P4UZEM\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3602404150\\\":{\\\"name\\\":\\\"3602404150\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3604760265\\\":{\\\"name\\\":\\\"3604760265\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3608765262\\\":{\\\"name\\\":\\\"3608765262\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4o9cvDPQtVxEMtB67pEYYW\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3612827893\\\":{\\\"name\\\":\\\"3612827893\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6WQhvCIO0WCXKPlaqF13tg:100.00:12\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3625418394\\\":{\\\"name\\\":\\\"3625418394\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3629211338\\\":{\\\"name\\\":\\\"3629211338\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3632185250\\\":{\\\"name\\\":\\\"3632185250\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"uS5SdmfBaK2UINQGhNko6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3638300699\\\":{\\\"name\\\":\\\"3638300699\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3642739548\\\":{\\\"name\\\":\\\"3642739548\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5PMQTNwFCZtBR7arZFXCuo\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3649526019\\\":{\\\"name\\\":\\\"3649526019\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2pAlIJIGb0OqUokTDq8HAx\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3658435963\\\":{\\\"name\\\":\\\"3658435963\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1D7nVkdssnG5AY9evN1IO3:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3681005650\\\":{\\\"name\\\":\\\"3681005650\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7mbYvE2g0nrLIXGQbAynFl:100.00:6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3683570479\\\":{\\\"name\\\":\\\"3683570479\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3718850965\\\":{\\\"name\\\":\\\"3718850965\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3719413687\\\":{\\\"name\\\":\\\"3719413687\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3727136946\\\":{\\\"name\\\":\\\"3727136946\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5IUo9ADyMD9EKrr63slviL\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3728973660\\\":{\\\"name\\\":\\\"3728973660\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"786GedWy6ajgR3EGw4VLw7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3748838155\\\":{\\\"name\\\":\\\"3748838155\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"J95e6o0gS7fanPV6fV0lW\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3758266271\\\":{\\\"name\\\":\\\"3758266271\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6xMf6EuU3SWw0vKNYeqlrh:100.00:17\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3767477981\\\":{\\\"name\\\":\\\"3767477981\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3773638854\\\":{\\\"name\\\":\\\"3773638854\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3WMQLcu2Q1HcmHrQlxffkN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3777622887\\\":{\\\"name\\\":\\\"3777622887\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3790246742\\\":{\\\"name\\\":\\\"3790246742\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"21PAqqSibqx5bUyo2CFKWy\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3806631862\\\":{\\\"name\\\":\\\"3806631862\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4IZ7QR6jvfsc82IuNWhEsN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3835808111\\\":{\\\"name\\\":\\\"3835808111\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"V3iw7NppykR043EDPBZvX:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3855301715\\\":{\\\"name\\\":\\\"3855301715\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3865786566\\\":{\\\"name\\\":\\\"3865786566\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"OqzXi9P1TeMv8enCRUMUA:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3907001491\\\":{\\\"name\\\":\\\"3907001491\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"41eTJvYDLQttIWgxpxLe4l\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3914744596\\\":{\\\"name\\\":\\\"3914744596\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6qH1qw9MBu9iHQG29RJUdE\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3931859276\\\":{\\\"name\\\":\\\"3931859276\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3935694520\\\":{\\\"name\\\":\\\"3935694520\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3955684342\\\":{\\\"name\\\":\\\"3955684342\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3961057518\\\":{\\\"name\\\":\\\"3961057518\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"69mU6RtEeW46r63AIZ9oPD\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3966685453\\\":{\\\"name\\\":\\\"3966685453\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6mhJ7BBZUVJjMnvVxH3ahm\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3972294244\\\":{\\\"name\\\":\\\"3972294244\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3994938899\\\":{\\\"name\\\":\\\"3994938899\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2vZCfOQjlzPr0EBS5vTpdH\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4021931638\\\":{\\\"name\\\":\\\"4021931638\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3TxtYp2fwEis1mA7EuvHeI:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4037209004\\\":{\\\"name\\\":\\\"4037209004\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Ra6YSHijhn1R5gH0o5bI9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4059817396\\\":{\\\"name\\\":\\\"4059817396\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4062690877\\\":{\\\"name\\\":\\\"4062690877\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4062693929\\\":{\\\"name\\\":\\\"4062693929\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6Ra54abnvVkFDRwXgkDgV:0.00:11\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4075833615\\\":{\\\"name\\\":\\\"4075833615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4094412970\\\":{\\\"name\\\":\\\"4094412970\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"36WTwY8EiKrpGwjoclZPav\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4108510704\\\":{\\\"name\\\":\\\"4108510704\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4SU6X72OoW2fCiWHWGTUT6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4109649425\\\":{\\\"name\\\":\\\"4109649425\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2PY3f69gocNhMWsZfiZrjS:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4118986142\\\":{\\\"name\\\":\\\"4118986142\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3dzuyjC6jWGmOLOXDQWQjg:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4122069007\\\":{\\\"name\\\":\\\"4122069007\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6mGKkyDXisCuTi1rq1eUYq\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4132708234\\\":{\\\"name\\\":\\\"4132708234\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7p8TcgU7jsU5eESu7js6A9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4134345213\\\":{\\\"name\\\":\\\"4134345213\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"37g39BBKM4jBXy3R5JWUll\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4164590530\\\":{\\\"name\\\":\\\"4164590530\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4166169096\\\":{\\\"name\\\":\\\"4166169096\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"60f2yAtZCtZTk7AUNIOLi2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4194040058\\\":{\\\"name\\\":\\\"4194040058\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4196421268\\\":{\\\"name\\\":\\\"4196421268\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4198030330\\\":{\\\"name\\\":\\\"4198030330\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4q9eW8Kk4PrfUIXTHwUA9i:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4198063952\\\":{\\\"name\\\":\\\"4198063952\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3dslib2UsBksPhClaLfXbu:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4219963017\\\":{\\\"name\\\":\\\"4219963017\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"UkJpCvtZh3ZNc253R5xej\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4230211647\\\":{\\\"name\\\":\\\"4230211647\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5HJT0KNtzBysTJJIwN93Ur:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4245238253\\\":{\\\"name\\\":\\\"4245238253\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5K3Ss6ACkacjo5u0fVuiH5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4249130196\\\":{\\\"name\\\":\\\"4249130196\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1GylpY0kJLasbUv583LqHZ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4255107497\\\":{\\\"name\\\":\\\"4255107497\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4272153326\\\":{\\\"name\\\":\\\"4272153326\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1oFlTGVYDYsnuCd0v606x5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]}},\\\"dynamic_configs\\\":{\\\"198152316\\\":{\\\"name\\\":\\\"198152316\\\",\\\"value\\\":{\\\"thresholdDay\\\":14},\\\"rule_id\\\":\\\"4ZGogckXokCfUxqiaLH5ve\\\",\\\"group\\\":\\\"4ZGogckXokCfUxqiaLH5ve\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"201017248\\\":{\\\"name\\\":\\\"201017248\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"739965369\\\":{\\\"name\\\":\\\"739965369\\\",\\\"value\\\":{\\\"thresholdMessageCount\\\":1,\\\"mmapiRoutingRatio\\\":0},\\\"rule_id\\\":\\\"TAvwErnTk3Rmdf1mnhVBq\\\",\\\"group\\\":\\\"TAvwErnTk3Rmdf1mnhVBq\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1119399031\\\":{\\\"name\\\":\\\"1119399031\\\",\\\"value\\\":{\\\"connect_number\\\":\\\"\\\"},\\\"rule_id\\\":\\\"launchedGroup\\\",\\\"group\\\":\\\"launchedGroup\\\",\\\"group_name\\\":\\\"Test\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1127325973\\\":{\\\"name\\\":\\\"1127325973\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1140243592\\\":{\\\"name\\\":\\\"1140243592\\\",\\\"value\\\":{\\\"displayPeriod\\\":7,\\\"displayPaths\\\":[\\\"/\\\"]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1228945520\\\":{\\\"name\\\":\\\"1228945520\\\",\\\"value\\\":{\\\"enabled_multiple_wa_numbers_plans\\\":[\\\"Business-Plan\\\",\\\"Enterprise-Plan\\\"]},\\\"rule_id\\\":\\\"6hEuwWunqvpIj8JEOmh7Pm:100.00:3-11WG70T4DuaMG7agsFn5Lc\\\",\\\"group\\\":\\\"6hEuwWunqvpIj8JEOmh7Pm:100.00:3-11WG70T4DuaMG7agsFn5Lc\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1252254248\\\":{\\\"name\\\":\\\"1252254248\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1657359845\\\":{\\\"name\\\":\\\"1657359845\\\",\\\"value\\\":{\\\"segment_1\\\":{\\\"feature_settings\\\":[\\\"KnowBot\\\"],\\\"user_roles\\\":[\\\"ADMINISTRATOR\\\",\\\"AUTOMATION_MANAGER\\\",\\\"EXTERNAL_ADMINISTRATOR\\\"],\\\"number_of_knowbots\\\":{\\\"operator\\\":\\\"=\\\",\\\"value\\\":0}},\\\"segment_2\\\":{\\\"user_roles\\\":[\\\"ADMINISTRATOR\\\",\\\"AUTOMATION_MANAGER\\\",\\\"EXTERNAL_ADMINISTRATOR\\\"],\\\"knowbot_usage_by_months\\\":{\\\"month\\\":3,\\\"usage\\\":{\\\"operator\\\":\\\">\\\",\\\"value\\\":0}},\\\"number_of_knowbots\\\":{\\\"operator\\\":\\\">\\\",\\\"value\\\":0}}},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1772852090\\\":{\\\"name\\\":\\\"1772852090\\\",\\\"value\\\":{\\\"displayPeriod\\\":7},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1867650129\\\":{\\\"name\\\":\\\"1867650129\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1936679860\\\":{\\\"name\\\":\\\"1936679860\\\",\\\"value\\\":{\\\"plans\\\":[\\\"abc\\\"]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":true,\\\"passed\\\":false,\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"1991952245\\\":{\\\"name\\\":\\\"1991952245\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"2209800305\\\":{\\\"name\\\":\\\"2209800305\\\",\\\"value\\\":{\\\"TenantIDs\\\":[\\\"365443\\\",\\\"393307\\\"]},\\\"rule_id\\\":\\\"6HNnx6fwYnd7oY1nudAVoI:100.00:2\\\",\\\"group\\\":\\\"6HNnx6fwYnd7oY1nudAVoI:100.00:2\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2281530840\\\":{\\\"name\\\":\\\"2281530840\\\",\\\"value\\\":{\\\"business-year_business-month\\\":{\\\"isDowngrade\\\":true,\\\"needFeatureCheck\\\":false},\\\"standard-month_growth-month\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"standard-month_growth-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"standard-year_growth-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":false},\\\"pro-month_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":false},\\\"professional-month_pro-month\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"professional-month_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"professional-year_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true}},\\\"rule_id\\\":\\\"3M2CT8wAkisnx4D34CqOkV:100.00:1-3M2CT6RxS0iTdF57tuvb1T\\\",\\\"group\\\":\\\"3M2CT8wAkisnx4D34CqOkV:100.00:1-3M2CT6RxS0iTdF57tuvb1T\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2294648607\\\":{\\\"name\\\":\\\"2294648607\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"WJ7xApZjbJEY5QQ2t2Hts:0.00:8\\\",\\\"group\\\":\\\"WJ7xApZjbJEY5QQ2t2Hts:0.00:8\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489550326\\\":{\\\"name\\\":\\\"2489550326\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2517717277\\\":{\\\"name\\\":\\\"2517717277\\\",\\\"value\\\":{\\\"call_partners\\\":[]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2862204285\\\":{\\\"name\\\":\\\"2862204285\\\",\\\"value\\\":{\\\"advertisement_layout\\\":\\\"popup\\\"},\\\"rule_id\\\":\\\"25UrtjZ93tr6xgDdxLbmbx\\\",\\\"group\\\":\\\"25UrtjZ93tr6xgDdxLbmbx\\\",\\\"group_name\\\":\\\"Test #2\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":true,\\\"is_user_in_experiment\\\":true,\\\"secondary_exposures\\\":[]},\\\"3025766574\\\":{\\\"name\\\":\\\"3025766574\\\",\\\"value\\\":{\\\"existing_plan_ids\\\":[\\\"Business-Plan-GBP-Yearly\\\",\\\"Business-Plan-GBP-Every-6-months\\\",\\\"Business-Plan-GBP-Every-3-months\\\",\\\"Business-Plan-GBP-Monthly\\\",\\\"Pro-Plan-GBP-Yearly\\\",\\\"Pro-Plan-GBP-Every-6-months\\\",\\\"Pro-Plan-GBP-Every-3-months\\\",\\\"Pro-Plan-GBP-Monthly\\\",\\\"Growth-Plan-GBP-Yearly\\\",\\\"Growth-Plan-GBP-Every-6-months\\\",\\\"Growth-Plan-GBP-Every-3-months\\\",\\\"Growth-Plan-GBP-Monthly\\\",\\\"Business-Plan-EUR-Yearly\\\",\\\"Business-Plan-EUR-Every-6-months\\\",\\\"Business-Plan-EUR-Every-3-months\\\",\\\"Business-Plan-EUR-Monthly\\\",\\\"Pro-Plan-EUR-Yearly\\\",\\\"Pro-Plan-EUR-Every-6-months\\\",\\\"Pro-Plan-EUR-Every-3-months\\\",\\\"Pro-Plan-EUR-Monthly\\\",\\\"Growth-Plan-EUR-Yearly\\\",\\\"Growth-Plan-EUR-Every-6-months\\\",\\\"Growth-Plan-EUR-Every-3-months\\\",\\\"Growth-Plan-EUR-Monthly\\\",\\\"Growth-Usage-Plan-USD-Yearly\\\",\\\"Growth-Usage-Plan-USD-Monthly\\\",\\\"Flexi-Plan-INR-Every-15-years\\\",\\\"BV-paused---0-BRL-Monthly\\\",\\\"Growth-Plan-USD-Every-3-months\\\",\\\"Growth-Plan-USD-Every-6-months\\\",\\\"Growth-Plan-INR-Every-3-months\\\",\\\"Growth-Plan-INR-Every-6-months\\\",\\\"Growth-Plan-BRL-Every-3-months\\\",\\\"Growth-Plan-BRL-Every-6-months\\\",\\\"Growth-Plan-HKD-Every-3-months\\\",\\\"Growth-Plan-HKD-Every-6-months\\\",\\\"Pro-Plan-USD-Every-3-months\\\",\\\"Pro-Plan-USD-Every-6-months\\\",\\\"Pro-Plan-INR-Every-3-months\\\",\\\"Pro-Plan-INR-Every-6-months\\\",\\\"Pro-Plan-BRL-Every-3-months\\\",\\\"Pro-Plan-BRL-Every-6-months\\\",\\\"Pro-Plan-HKD-Every-3-months\\\",\\\"Pro-Plan-HKD-Every-6-months\\\",\\\"Business-Plan-USD-Every-3-months\\\",\\\"Business-Plan-USD-Every-6-months\\\",\\\"Business-Plan-INR-Every-3-months\\\",\\\"Business-Plan-INR-Every-6-months\\\",\\\"Business-Plan-BRL-Every-3-months\\\",\\\"Business-Plan-BRL-Every-6-months\\\",\\\"Business-Plan-HKD-Every-3-months\\\",\\\"Business-Plan-HKD-Every-6-months\\\",\\\"Professional-Plan-Advantage-USD-Yearly\\\",\\\"Professional-Plan-Advantage-USD-Monthly\\\",\\\"Standard-Plan-Advantage-USD-Yearly\\\",\\\"Standard-Plan-Advantage-USD-Monthly\\\",\\\"Enterprise---General---WATI-USD-Yearly\\\",\\\"Standard-Plan---Enterprise-HKD-Yearly\\\",\\\"Standard-Plan---Enterprise-USD-Yearly\\\",\\\"Standard-Plan---Enterprise-USD-Monthly\\\",\\\"Enterprise---General-HKD-Monthly\\\",\\\"Enterprise---General---WATI-INR-Monthly\\\",\\\"Enterprise---General-HKD-Yearly\\\",\\\"Pro-Plan-HKD-Yearly\\\",\\\"Pro-Plan-HKD-Monthly\\\",\\\"Pro-Plan-BRL-Yearly\\\",\\\"Pro-Plan-BRL-Monthly\\\",\\\"Pro-Plan-INR-Yearly\\\",\\\"Pro-Plan-INR-Monthly\\\",\\\"Pro-Plan-USD-Yearly\\\",\\\"Pro-Plan-USD-Monthly\\\",\\\"Business-Plan-HKD-Yearly\\\",\\\"Business-Plan-HKD-Monthly\\\",\\\"Business-Plan-BRL-Yearly\\\",\\\"Business-Plan-BRL-Monthly\\\",\\\"Business-Plan-INR-Yearly\\\",\\\"Business-Plan-INR-Monthly\\\",\\\"Business-Plan-USD-Yearly\\\",\\\"Business-Plan-USD-Monthly\\\",\\\"Growth-Plan-HKD-Yearly\\\",\\\"Growth-Plan-HKD-Monthly\\\",\\\"Growth-Plan-BRL-Yearly\\\",\\\"Growth-Plan-BRL-Monthly\\\",\\\"Growth-Plan-INR-Yearly\\\",\\\"Growth-Plan-INR-Monthly\\\",\\\"Growth-Plan-USD-Yearly\\\",\\\"Growth-Plan-USD-Monthly\\\",\\\"Enterprise---General-USD-Yearly\\\",\\\"Enterprise---General-USD-Monthly\\\",\\\"Professional-Plan-BRL-Yearly\\\",\\\"Professional-Plan-BRL-Monthly\\\",\\\"Standard-Plan-BRL-Yearly\\\",\\\"Standard-Plan-BRL-Monthly\\\",\\\"WA-API-Gateway-USD-Yearly\\\",\\\"BV-paused---0-HKD-Monthly\\\",\\\"BV-paused---0-INR-Monthly\\\",\\\"BV-paused---0-USD-Monthly\\\",\\\"Standard-Plan-INR-Yearly\\\",\\\"Standard-Plan-INR-Monthly\\\",\\\"Professional-Plan-INR-Yearly\\\",\\\"Professional-Plan-INR-Monthly\\\",\\\"Developer-Plan-HKD-Yearly\\\",\\\"Developer-Plan-HKD-Monthly\\\",\\\"Professional-Plan-HKD-Yearly\\\",\\\"Professional-Plan-HKD-Monthly\\\",\\\"Standard-Plan-HKD-Yearly\\\",\\\"Standard-Plan-HKD-Monthly\\\",\\\"Professional-Plan-India-INR-Yearly\\\",\\\"Professional-Plan-India-INR-Monthly\\\",\\\"Standard-Plan-India-INR-Yearly\\\",\\\"Standard-Plan-India-INR-Monthly\\\",\\\"Developer-Plan-India-INR-Yearly\\\",\\\"Developer-Plan-India-INR-Monthly\\\",\\\"WA-API-Gateway-USD-Monthly\\\",\\\"Developer-Plan-Indonesia-USD-Yearly\\\",\\\"Developer-Plan-Indonesia-USD-Monthly\\\",\\\"Professional-Plan-Indonesia-USD-Yearly\\\",\\\"Professional-Plan-Indonesia-USD-Monthly\\\",\\\"Standard-Plan-Indonesia-USD-Yearly\\\",\\\"Standard-Plan-Indonesia-USD-Monthly\\\",\\\"Developer-Plan-Brazil-USD-Yearly\\\",\\\"Developer-Plan-Brazil-USD-Monthly\\\",\\\"Professional-Plan-Brazil-USD-Yearly\\\",\\\"Professional-Plan-Brazil-USD-Monthly\\\",\\\"Standard-Plan-Brazil-USD-Yearly\\\",\\\"Standard-Plan-Brazil-USD-Monthly\\\",\\\"Developer-Plan-India-USD-Yearly\\\",\\\"Developer-Plan-India-USD-Monthly\\\",\\\"Professional-Plan-India-USD-Yearly\\\",\\\"Professional-Plan-India-USD-Monthly\\\",\\\"Standard-Plan-India-USD-Yearly\\\",\\\"Standard-Plan-India-USD-Monthly\\\",\\\"Developer-Plan-USD-Yearly\\\",\\\"Developer-Plan-USD-Monthly\\\",\\\"Professional-Plan-USD-Yearly\\\",\\\"Professional-Plan-USD-Monthly\\\",\\\"Standard-Plan-USD-Yearly\\\",\\\"Standard-Plan-USD-Monthly\\\"]},\\\"rule_id\\\":\\\"ZLtvnjYb0k0xZ9nUEgvRD:100.00:1\\\",\\\"group\\\":\\\"ZLtvnjYb0k0xZ9nUEgvRD:100.00:1\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3351656030\\\":{\\\"name\\\":\\\"3351656030\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"5ZPVDrfXIYjYvATjBSXVM5-CunoyRQaW7rLuFov3xHPJS\\\",\\\"group\\\":\\\"5ZPVDrfXIYjYvATjBSXVM5-CunoyRQaW7rLuFov3xHPJS\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3389876171\\\":{\\\"name\\\":\\\"3389876171\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3879789560\\\":{\\\"name\\\":\\\"3879789560\\\",\\\"value\\\":{\\\"scheduleIntervalHours\\\":24,\\\"scheduleV1Enabled\\\":true,\\\"engagementMetricsDailyWriteMode\\\":3,\\\"isDataFromBQ\\\":true},\\\"rule_id\\\":\\\"5O27fy8SkidWXhaUPvcevT:100.00:1\\\",\\\"group\\\":\\\"5O27fy8SkidWXhaUPvcevT:100.00:1\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4129906326\\\":{\\\"name\\\":\\\"4129906326\\\",\\\"value\\\":{\\\"link\\\":{\\\"Growth-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-W.pdf\\\",\\\"Growth-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-L.pdf\\\",\\\"Growth-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-E.pdf\\\",\\\"Growth-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-M.pdf\\\",\\\"Growth-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-G.pdf\\\",\\\"Growth-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-I.pdf\\\",\\\"Growth-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Growth-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Pro-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-W.pdf\\\",\\\"Pro-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-L.pdf\\\",\\\"Pro-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-E.pdf\\\",\\\"Pro-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-M.pdf\\\",\\\"Pro-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-G.pdf\\\",\\\"Pro-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-I.pdf\\\",\\\"Pro-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Pro-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Enterprise-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Enterprise-Plan-INR-I.pdf\\\",\\\"Enterprise-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Enterprise-Plan-INR-I.pdf\\\",\\\"Business-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-W.pdf\\\",\\\"Business-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-L.pdf\\\",\\\"Business-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-E.pdf\\\",\\\"Business-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-M.pdf\\\",\\\"Business-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-G.pdf\\\",\\\"Business-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-I.pdf\\\",\\\"Business-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-INR-I.pdf\\\",\\\"Business-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-INR-I.pdf\\\",\\\"Flexi-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-USD-I.pdf\\\",\\\"Flexi-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-INR-I.pdf\\\",\\\"Flexi-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-USD-I.pdf\\\",\\\"Flexi-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-INR-I.pdf\\\",\\\"Lite-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Lite-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Lite-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Lite-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Lite-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Lite-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Lite-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Lite-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Standard-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Standard-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Standard-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Standard-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Standard-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Standard-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Standard-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Standard-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Professional-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Professional-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Professional-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Professional-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Professional-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Professional-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Professional-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Professional-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Enterprise-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Enterprise-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Enterprise-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Enterprise-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Enterprise-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Enterprise-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Enterprise-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Enterprise-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\"}},\\\"rule_id\\\":\\\"4KViahiIJytWLfTZoF5H2c:100.00:2\\\",\\\"group\\\":\\\"4KViahiIJytWLfTZoF5H2c:100.00:2\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4168958031\\\":{\\\"name\\\":\\\"4168958031\\\",\\\"value\\\":{\\\"number-of-buttons\\\":2},\\\"rule_id\\\":\\\"launchedGroup\\\",\\\"group\\\":\\\"launchedGroup\\\",\\\"group_name\\\":\\\"Control\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]}},\\\"layer_configs\\\":{},\\\"sdkParams\\\":{},\\\"has_updates\\\":true,\\\"generator\\\":\\\"scrapi-nest\\\",\\\"time\\\":1761748041336,\\\"company_lcut\\\":1761748041336,\\\"evaluated_keys\\\":{\\\"userID\\\":\\\"1037246\\\",\\\"stableID\\\":\\\"497c51b6-fc99-4530-9dc3-a4ad1a23caaf\\\",\\\"customIDs\\\":{\\\"tenantID\\\":\\\"1037246\\\"}},\\\"hash_used\\\":\\\"djb2\\\",\\\"derived_fields\\\":{\\\"ip\\\":\\\"49.43.32.169\\\",\\\"country\\\":\\\"IN\\\",\\\"locale\\\":\\\"en-US\\\",\\\"browserName\\\":\\\"Chrome\\\",\\\"browserVersion\\\":\\\"141.0.0\\\",\\\"osName\\\":\\\"Windows\\\",\\\"osVersion\\\":\\\"10.0.0\\\",\\\"browser_name\\\":\\\"Chrome\\\",\\\"browser_version\\\":\\\"141.0.0\\\",\\\"os_name\\\":\\\"Windows\\\",\\\"os_version\\\":\\\"10.0.0\\\"},\\\"hashed_sdk_key_used\\\":\\\"3368523838\\\",\\\"can_record_session\\\":true,\\\"recording_blocked\\\":false,\\\"session_recording_rate\\\":1,\\\"auto_capture_settings\\\":{\\\"disabled_events\\\":{}}}\",\"receivedAt\":1761751635393,\"stableID\":\"497c51b6-fc99-4530-9dc3-a4ad1a23caaf\",\"fullUserHash\":\"909821451\"}"
        },
        {
          "name": "lastExternalReferrer",
          "value": "other"
        },
        {
          "name": "dreamdataio.f6a2780d-352d-4833-b565-16cc4f2519ba.reclaimEnd",
          "value": "null"
        },
        {
          "name": "userpilot:sessions",
          "value": "{\"451900568\":[]}"
        },
        {
          "name": "statsig.stable_id.1070914477",
          "value": "\"497c51b6-fc99-4530-9dc3-a4ad1a23caaf\""
        },
        {
          "name": "firstAppearTime",
          "value": "1761751636979"
        },
        {
          "name": "apolloAnonId",
          "value": "64bf2e64-a44e-4baf-aa4d-1d269d78ae0a"
        },
        {
          "name": "li_adsId",
          "value": "917f7e24-7fc8-4e18-97ae-e8e72cc8432a"
        },
        {
          "name": "ajs_anonymous_id",
          "value": "\"4c25403c-eb94-4047-bd19-b1f6fe163e44\""
        },
        {
          "name": "ajs_user_traits",
          "value": "{}"
        },
        {
          "name": "userpilotSDK973134567",
          "value": "{\"SR-CONFIG\":{\"session_id\":\"752354173\",\"recording_enabled\":false,\"is_recording\":false,\"pathOnly\":false,\"withHash\":false},\"userpilotStartTutorial\":586,\"UpSetupStart\":\"\",\"running_flows\":\"x%C2%9C%C3%A5%5D%5Do%C3%9B8%16%C3%BD+%C2%82%1E%C3%A6a%11'%C2%B6%C3%A3$%C2%AD%C3%93v%C3%91%C3%A9~L1%C2%BB%C3%AD%0E2%C3%93%C2%87i%03%C2%83%C2%96h%C2%9B%C2%A8,%0A%22%15'%C2%8D%C3%BB%C3%9F%C3%B7%C2%92%C2%92%C2%BF-'%16%0F%17;%C2%BBy%08b~%C2%9C%7B%C3%AF%C2%B9%C2%87%C3%94%C2%95D8%C2%8F%C3%A1%C3%85%C2%8B%C3%8B%C2%B0%C3%BF%18%C2%B2H%0B%C2%99%C2%AA%C3%95%C2%9F%03%11%C2%87%C3%BD%C3%B0%C3%A7%C2%BF%C2%BD%C3%BC%C3%A5%5Bx%12F2%C3%95%3C%C3%95%C3%94%C3%B2*%16wA%C2%940%C2%A5%5E%7F%09%0B%C3%85%C3%B3L$R%C2%B7%C2%86%C2%85Hb%C2%9E%7F%09%C3%9F%7CI%C2%83%C2%AD%C2%9F%C2%9A)%C2%9A%C3%9F%C3%AB%C2%96%C3%A2%C3%96Z%C2%B0%C2%83%C2%B4%C3%AC1%C2%A6%C2%99H%0Dv%C2%A0%C3%B4C%C3%82%09$cq,%C3%92q?%C3%A8%5Cd%C3%B7A%C3%97%C3%BC%C3%AA%C2%B4%C2%B3%C3%BB%C3%AB%C3%80b%C2%B2D%C2%8C%C3%93~%C2%90%C3%B0%C2%91%C2%BE%C2%A6IE*4EC%C3%93l4%C2%ADN%C3%A7%C3%BC%C2%82%C2%9A%C2%AB%C2%90x,4%1BZ%C3%94%11K%14%C2%A7%1E&ZY%C3%82%22%3E%C2%91%C3%86%11%C3%AA%C3%98%1B%C3%95%C2%81%C3%88%16!%0C%13%19%7D%C2%A5%C3%89%C2%AFT%C3%86%C3%92:%06R%19%C3%B3%C2%B5%C3%90F%C3%A4Vk%C3%86%C3%85x%C2%A2%C3%BB%C3%81U%C2%BB%7D%1D%C3%98%16%25%C2%BE%C3%B12%5C%0A%C3%A9%C3%8D%C3%BBT%C3%A72.%22%C3%A2%20%C3%B8%C3%80g%C3%81%0DK%C2%B8%0A%C3%9Ej%C2%9D%C2%8Ba%C2%A1%C2%B9zuf,%C2%BEyuF%C3%BE%C3%ADKH%5D%C2%BB%C2%BFD%C2%B5%17y%C3%AA%3E;O/%7B%C3%9D%C3%9E%7Fy%C2%9E%C2%AA%C2%AC%C3%B4%C3%8A%C2%AC%7C%C2%90%C2%B3%60%C3%8AR6%C3%A6%C3%81%C2%83,%C3%B2@%C3%99%C2%ACd%22%C3%A3%09%C3%91%12%C3%8C%C2%84%C2%9E%04S%C2%99%C3%B3%C3%A0N(1%14%C2%89%C3%90%0F%01K%C3%A3@%C3%8E%C2%8845%11%C3%99ip%C3%83u%C3%A0%C2%A4%16r%C3%A3%1F%C2%9C%C3%85%C3%81%C2%8D&7%16:%08%C3%B4%C2%84%C3%A9%C3%80%C3%92%5Dz%C2%B1%C3%AE%5E.#%C2%AE%C2%94u%C2%84,%C2%9A!%C2%AE%0E%C2%BC3B%C2%88t%C3%B0%C3%91%C3%84%C2%B5tA%06bJ%C3%86%C3%AEx%C3%80%C2%A2H%164dAA%C2%92%C2%90%C2%83%C3%84%0F%7B0%C2%A3b%C3%8E%122.U%C2%91%C3%B3%C3%93%0D!%C3%BFg%C2%B2%C3%B8%C2%8A%05%C2%93%C2%9C%C2%8F%C2%A8s%C2%A2u%C2%A6%C3%BAgg%C2%89%C2%B8%C3%A3%C2%A73%C2%A6%05%C3%8B%C2%B2S!%C3%8F%14%C3%97%C2%9AD%C2%AD%C3%BEL!%C2%BC%C3%96%C2%9CM%C3%9F%C2%A7Cy%7FS%C2%B5%C2%AE%C2%A1GE%C2%AEd%C3%9E%0F2)H%C3%80%C3%B9%C2%B5%C3%ABV@%C3%B3%C2%8D@%C3%9E%C3%9A4q%22R%05%1B%5C%07%C2%AD%1F%C3%86%C3%BA%C3%BA%C2%87t%C2%A8%C2%B2%C3%AB%25s%C3%AC%C3%8D%1F%C2%80D6Vo%C3%93x%C2%B5%C2%81%C3%BD%C3%80%C2%A6%C3%995%C3%91%C2%97%C3%93%C3%8A%C3%BF%C2%95%06%C2%B0%C3%8D%1E%C3%85Y%1EM%5E'%C2%A4%C3%B4%C2%812J%C2%B7%C2%ADf%C2%8B0%C3%A2%C2%B7%C3%9A%7F%C2%AD%C3%B3%C2%82%C3%BB%C3%8D%05q?%12c%C2%92i%C2%B0%C2%B6%C3%A4%C3%8A%1C%C3%94%C2%B1%C3%BF%C3%BC%C2%BDx%C2%B3%C2%A5%1CE%17%C3%A2%C2%98%C2%9B%C3%9C%0F%121%C3%8CY%C3%BE@%C3%97cj%C3%A3,%C3%AC%7F~%0C%C3%89%3C%7D%C3%BE%C3%8B%C3%BBO%C3%A1%C3%B7%C2%93%C3%87%C3%90%C2%86E%C2%9FU1%C2%9D%C3%92%C3%88%C3%81%60q%097%C2%9D+:i%C3%83%C2%A5Q%C2%9F%C3%83%C3%8Fv%C3%BC%C2%9F(%C3%92%C3%AD%09_%C3%82%5B%C2%B2a%60o%C3%8D%C3%94%C2%8C%C2%99%C2%9CP%C3%A7t(Rf%C2%8B%C2%86%C2%81%C3%8E9%C2%B7.D%C3%B6wFf%C3%A7%C3%ADy%C3%B0&X%C3%BE&%C2%84Q%C3%98%C3%AF%C2%BC%3C%09e%C3%98%C2%BF%C2%BA%C3%AA%C2%9D%C2%84j%C3%82b9%1B%C3%84r%1A%C3%B6%C3%9B%C3%B4%C3%91lF#%C2%99G%C3%9C%C3%84d%0D%C3%AD%C2%A2%C3%8C;%15P%C3%9B%C3%A2t%C2%8EE%C2%99w7%C3%9CqEi%C3%AE%C3%8E%C3%BC%7C%1F;%25J%C2%B71%0C%C3%80%1FW%C2%86v%C2%81%C2%8Eu%C3%AA%C3%B6$4r%C2%B6%C2%82;Y%C2%93%25m%1B%C2%AD%C2%88.c%C2%A5%1CW%C3%AD%C2%A6%C2%ADE%C2%9D%C2%89%C2%88%C2%AC%1Aw%C3%BAWU%C3%89m%C2%A9%C3%A0Z%C2%91%C2%AEG%C3%9E%C2%B5%C3%9E%5E%C2%BCx%C3%91L%C2%A9%18%C2%BDna%11%C2%A78%C2%B8M%C2%AC#D%C2%B7%C2%81r%C2%8EXP%5BX%18%C3%96%C3%96%C3%A10%C3%84%C2%ADk%1B%037%C3%AFA%C3%A9%5B%C3%82%C3%81%18%5CG%C3%84G%0DBD%C2%92%08f%10O%1F%C2%8A%C2%BB%C3%B9%C3%85%C2%9EM%0F%C2%83%C3%A5%7C%C2%95%C3%9E%C2%81%03%07%0B%C2%83%C3%83l%7F%C2%BBp0%06%C2%91%C2%9B%C3%A0%1EP%20%22f%15%C3%AFED%C2%B2%C2%89%5C%C3%91%C3%BBqa%C2%A0%60B%C3%B1lz%C2%A1%C3%92%C2%9D%C3%87%C3%B9emQXb%1DQ%12%C3%AE%C3%85r(%C3%93k%C3%A0%C3%80%C3%81%C3%82%C3%A0%5C%C3%B7%C3%87:8%18%C2%83%C2%98%C3%BD%C2%B1%16%14%C2%88%C3%A8%C2%BA%C2%9C%0F%20%22%C3%99%C3%84,%C3%AAC%C2%B80P0%C2%A1x6%C2%BDP%09%C3%A4%11SB%C3%96%C3%81%01xD%16%C2%92%C2%B5%C2%A0@D%C3%98v%C2%89%C2%AC(%0F%C2%83z%09%1F%0C%0A%5B%C3%A9%C3%A0%C3%AA%C3%B2I%5C_%3C@q%C3%B1%C3%A4za%C3%96%17%C2%AD%10N%C3%A7WO%C2%94%C2%9C%008'6%C3%AB%10%C3%B1Q#%11%01%C3%BBi%1D%22%C2%92M%C3%98~Z%C2%8B%C2%8B%05%05,%C3%B9%03%C2%A0%60fa%0B%C3%BF%104%12%17O%C2%AE%17f%7D%C3%91%C2%8A%C3%A5%14V%C2%A2%C3%96!b8%05%17%C2%AA%C2%B5%C2%B8XP%C3%A4%C3%B6%0A%C2%AEX%0F%C3%A3%C3%BA%C3%A2%01%C2%8F%C2%8B%C3%9C%0D%C3%B0%C3%95%C3%AB%C2%93%C3%90%1E%09AC%7B!%C3%9A%17%C3%8B%1E)%06%C3%B0%C2%8B,f%C3%81%C2%95,%C2%BE%C2%8C%05%C3%97%C2%B0%C3%A0%02%16_%C2%BDz)%5D%C3%B1u+%C2%BEh%C3%B5R%C2%B1%C3%BA*W%C2%BD%C3%94%C2%AA%C3%A0B%15_%C2%A5z)Q%C3%B1%C3%B5)%C2%B88%C3%85W%C2%A6%5E%C3%8AR%7CM%C2%8A/H%C2%BDT%C2%A3%C2%BEJQ/u%C2%A8%C2%97%22%C3%94W%05%C3%AA%C2%B1%C3%BC%C3%B4U%7B%C3%A2%0BO/U%C2%A7%C2%AF%C2%92%13Wo%C3%96%1D%13%C2%8DX%1E%C2%B76N.o%1D%15%C2%AD%C3%AB3%C3%B3b%3EbE%C2%B2%C3%937%12%C3%B7%3Cn%C3%8DD%C2%AC'%C3%9B%5D%C3%A6T%C3%AA,%C2%A7%C3%9F%C3%A5%C3%B9%C3%92%C3%AD%C2%83%C2%A7d%C2%A8%C3%85r%C3%8E%C3%AA%C3%BArs%C2%9E%C3%BC%C2%B8%C2%83%C2%A9%C2%BD%C3%9E%C3%A2hj%C3%83C%C3%94%C2%AE%C3%A2%00W%C3%90up%C2%B4%C3%A0%C3%B0%C2%88$7/%C2%A0%C2%A4g_%C2%B8t%C2%9B%C3%A6%11%C2%9AV$%0E%1D%7B%3C%19*%00%7C%C3%B6%C2%BD%C2%A4%C3%9EW%C3%9E=&%7D%C2%91%C2%A5%C2%8E%C3%85jx%C2%8E%7C%C3%BD%1A%0B%C2%86%5B%C3%A6%07%C2%89%C2%B8L%0E%18%14%C2%9A%C2%99%05%C2%95%C3%A5%C3%B5%C3%82%C3%ADj%C2%B1%C3%86#%0C%0EJ%C2%A2%17%06%C2%91!%C2%83%C3%A3%C3%85%07%C2%8B%C3%B4%0E%C3%AC%C2%9A#%C3%96%C3%BC%C3%85%C2%9E:%C2%AA%C3%8C%C3%A9%C2%B9#%C2%96%C3%B3i%C3%98%1D8%C3%A7%C2%A3%C2%B0%C3%BB%10%5D%C2%AF%C2%A5u%C2%A0%C2%AEW%C3%94%03%C2%B8%C2%AE%C3%97%C3%95%C3%83%C3%90%C2%AEW%C3%97'%C3%91%C3%81%C2%9AE%C2%AB%02/%09/z%C3%B0%25%06%C2%8FJ%C3%B0+%03p%C3%92%C3%B0%19%C3%B3%C2%92._%C2%B9%C3%B2%C2%98(0%C2%ADxN%C2%BD%10%C3%AA%C2%8BMp%C3%AC%C3%B8%C3%80%C2%BDD%0D%C3%B6%11%C3%AF%60c%C2%B8%C3%B9%C3%8B=e%5E%C2%89ui%C2%B1%C2%AE%1C%C2%B1%1C%C2%9E%7D%C3%96%C3%809%3C%C3%B5%C2%ACGl%C2%BE%C2%9F%1F%06m%C2%BE%C3%BD%3C%C2%89%C3%9B%7C-%3E%07%C2%BA%C2%B9%C3%A6%C2%9F%C2%89%0E%C3%96,Z%15xIx%C3%91%C2%83/1xT%C2%82_%19%C2%80%C2%93%C2%86%C3%8F%C2%98%C2%97t%C3%B9%C3%8A%C2%95%C3%87D5~%C2%BEX%07%C3%97%C3%BC%C3%B9%C3%A2%01D4%C2%A1%C2%BE%C3%98%04%C3%87%C2%8E%0F%C3%9CK%C3%94%60%1F%C3%B1%0E%C2%BA%C3%83a%1E%C2%99%C3%95%C3%81%01%C2%AA3%C3%A4%C2%83%C2%B3%C3%83%C2%A0%C2%80%C2%BD%1D%C3%BF%C3%B8%C3%AC9%C3%90%C2%80%C3%9D%C3%9E%C3%97C%C2%B4%C3%A7%1B%C3%80k%C3%99%C2%83N%C2%BC%C2%88%C3%84%C2%97B%3C%C3%8A%C3%83%C2%AF6%C2%BC%0B%03%C2%9FC/%09%C3%B4%C2%95=%C2%8F%C2%A9%C3%B3%C2%9B7%3C%C3%85%5E%C3%B8%C3%B5E%C2%AEGf%C3%B1$xa%C3%80W%C3%B8xO%C2%BD%C2%B8y$b%C3%9D%C3%91%C2%B9%C3%91%C3%8F%C2%BF%C2%8D%C2%A3x%C3%BB%C2%A8%C2%9A%121%1F%C2%B2%7CuTm_%C2%A7=!%C2%B7s6.%15S%C2%A6%C3%B9%C3%8Ei:%16%C3%B3%C3%9F%C2%B2%C3%BD%C2%83%C2%85L%5B#%C2%A6%16v%C3%AC%C2%97A%5B%C3%837d%C3%A8%C3%97%C3%857%C3%AD%C3%AE%20~%C3%BA%5D%C3%BE%C3%B2%C3%BBv%C3%ABX%11%C3%92O%C3%BB%0F%C3%97m%C3%B0%C3%95;&%07%C2%9B%C2%95%C3%AB1%C2%B5%C2%B0S%C2%85%C3%AAZ%C2%89%02*%C3%8E%C3%A6%C3%8E;y%C3%AE%C3%AAvs%C3%8BNf%C2%8F%C2%9CY%C2%B7&%C2%AB%05%C2%86YZ%C2%87%0E%C2%9AVwx%C2%BD%C3%92%C3%9D%C3%B3%C2%A3%C2%BF%C3%B6t%C2%B90%C3%8AG%01%C2%97%0D%C3%A6/%15%C3%A6%04%C2%B1u%20%C2%AD9%C3%8A%C3%96%C2%A3%22'%C2%A0%C2%AD%07%25%C2%AEX%5Bgu%00p%C3%8Bk%08%12%C2%91%C2%AES%5E@%C3%A9B%C3%A8%C2%86%C3%AB*4%C2%80%C3%8A0%12%C2%83%C3%A9%0B).%C2%B0%C2%B2%C3%B0%C2%B2%C3%B2%C2%A2)WA%00%C3%94%C2%80%C2%91%02L%07H%11%C2%80%15%C2%80O%C2%BFk%C3%AE%00%C2%89%C3%83d%0D%C2%962d%C2%BE%C3%80%C3%89re%1A@3%C2%86c%18%C3%81Hv%5D%C2%A9%01%C3%B0%C2%82!%05%C3%86%C3%88%22%C2%9C%C2%B2%C2%BA%C3%AE%1E%7D%C2%90%1C%11%0C&%12W/%00.4%C2%9E?%C3%AFl%C3%9E%C3%AC8%004%C2%BF%C3%9B%C3%99%C3%80h%5E%C2%88n%C3%834/?%C3%B6%205%C2%BF%C2%98%C3%AD%07k%C2%BE%C3%9F%C3%96%C3%A25%C3%9Fd%0EA6%C3%9Fw%C2%9E@m%C2%BEn%C2%9E%06F,%08%C2%88%10A*%C3%84I%10%C2%AA?%C2%B4%C3%B8%3C(%C3%8F%C2%8F%C3%AC%C2%BCi%0E!%16%C2%90Rp2%C2%81j%04-%10%0F%C3%AA%C3%B0#%0DDNA%09%C3%85e%13%C2%9AJt%1E=$%11%C3%81%3E%C2%88z%1C%C3%AFP%C3%92%C3%91%C2%8C#%C2%A8%02%C3%B1%C2%84#%09%C3%8A%10%224P%5C%C2%B8%C2%A0%10%C3%9E%C2%80%5C9%12%C2%A3%C3%AE%C2%B5%C3%97?%0B%C3%B1/%C2%96%C3%B1%C2%BC%C2%95K%C2%B9%C3%B3%C3%92y%C3%99%C3%89%13~%C2%B7%C3%B7%7F%C3%BE%C2%ADM/%C3%92x%C3%B7%C3%8D%C3%B4.Bg%C3%8F%C2%90%C2%B7Q$%C3%B3%C3%98%C2%BC%C2%92%C2%AE%C3%B1b%7D@%C2%9D%C2%9D%16%C2%BF%C3%8FXM%C3%9Fj%C3%BE%C2%B8%C3%90%C2%9A%C3%A7j%7B%C3%8C%C2%BB%C3%A8%C3%9B%C3%97%0F%C3%9B%C2%8D%C3%83%C3%A9%C3%BB%C2%87wO%C2%BF%C3%96%C3%AE%1E%C2%95@%C2%B7%17%C3%8B%7F%C3%A0%C2%B7%C3%9A%C2%98%C3%B3%C2%92%C2%B0s%C2%91%C3%88%C3%B3%C2%8F%07oD%C3%BFo%C3%9E%C3%BF%03%C2%B2%C2%8BI-,%C2%AF%C3%88%C2%A4n%C3%A6%C3%A5%C2%98%C3%A3,%C2%8E%C2%872%C3%9C2%02H%07&%17%C2%B0D%C2%B8%C2%9C4q%20%C3%92%C2%95E%00%C2%85%18%C3%BE%C2%9AS%C3%A0%14%C2%BFk%C3%B0%C2%80%C3%88/%1B/a'%C3%8F%5D%C3%9Dnn%C3%99%C3%89%C3%AC%C2%913%0F%14%C2%A8?R%C3%8D&%C3%93%1F%C2%99%C3%A2O%C3%96%C2%877%C3%A5%C2%BFT%C2%AF%1B%C3%B7%C2%AC%1Aq%C2%81QS*F%C3%B9%C3%87%C3%99%C3%87OU%C2%ABfCAx%C3%B7%C2%A6%C2%A3%5D%C2%B5%C3%A52%C3%A1%C2%B6%7C%C2%B4nW%C2%8D,%17li%C3%9D%C3%B4%C3%AA%C2%BC%C3%A0O%C3%97%C2%96%17%C3%BF%C3%BB%C2%A5e%C3%A3%7F%C2%8F%C3%ADf%C3%B6%C3%88%C2%99%07%C3%A4%C2%B9#%C2%9C%C2%9A/%C2%BE%3CV%7F%15%C3%8C%C3%9FW2%C2%BC%C3%BD%5E%C2%AAENIu%C3%B6nJY%C3%A1%C2%98%06%C3%B22%C3%A8%C2%ABHf%C3%9C%C3%9C%20RR%C2%AC%C2%90H%C2%9C%14%C3%8Db%C2%92%09%C2%BD%C2%B3%C3%96l%C3%91%C3%AE%08%C2%9C%C2%90%C2%A8%C2%AFs%C3%9A%C2%B1%C2%81R%C3%94S%03%7Ck%07%C2%8A;%11%17,%09%C3%BB%C2%8F!%C2%8B%22%C2%AE%C2%94%18%C2%8AD%C3%A8%07%C3%930%C2%92QA#%C3%836Q%1B%0EY%C3%B45%C3%8Ee%C2%B6h%C3%AC%C2%90%C2%A1%C2%98'%C3%8C%C2%8E%C2%8C%C2%8B%C3%9C:L%C3%AD%5DjW%C2%9A%C3%A9j%C3%90w3J%C3%B3%C2%A8%C3%AC%7D%C2%A4%C2%8F%131%C2%9E$%C3%A6,2%C2%8F%C3%8DT%C2%A2%25%25%1Fi%C3%B0%05%C3%8D%C2%9Cp%C3%93cm%C2%9E%C2%84%C3%B6%C2%9BB%17%C3%B6%C2%B3%C2%84E%7CJ%C2%8CY%7B%22_@%C2%86Zf%C2%AD%C2%88%C3%9AyNS%C2%88%C3%9A%C2%B10%C2%86%C3%82%C2%84%C2%8F%1684b%C2%89%22%C2%95%C2%A8%5CY%C3%99%C3%AA%C2%9AA%C3%95%C3%B8N%C3%AFj9%C3%A3%C3%A5%C2%9A%0F%C3%A7%C3%AD%C2%AB%C3%B0;%01%C3%A8%5C%C2%8C%07SY(%3E%C3%90%0F%C2%99UO%C3%95X%7D%C3%AC%C2%ACO:%C2%B7F%139%16Q%19+%11%C2%BEb%C2%82%C3%AE%C2%9A%C2%AB%C2%80%C3%8C%C2%87%C2%94%0D%13C%C3%89%C2%88%25%C2%8A%1BK%25%C2%9E%C2%962%C3%91%22#%C3%941%C3%9D%1DgV%C2%BDzB%13%0D%C2%A0%C3%BDc%20%C3%A2%C2%8A%C3%B7U%C2%B2%C3%9B%C2%A7%C2%97a5n%C2%B0l%C3%AD%C2%9A%00%C3%B2%22ME:%C3%BE%C3%AB=%C3%9D%C2%B7%0B%C2%9EF%C3%BC%1D%C3%93%7C,%C3%B3%07%7B%C3%8D%C3%8B9%C2%8B&%C3%86%0B%C2%B2%C3%82%C3%AF%C3%88%C2%B9AD%C2%B7%C3%A4%C2%BA%C2%B4ZhI%C3%BB%5Cb%C3%AD%5D%C2%BC0%C3%B7%C3%85%C2%9A%C2%97%0E%252Z%C3%A4%7F%C2%A2u%C2%A6%C3%BAgg%C2%89%C2%B8%C3%A3%C2%A73j=%15%C3%B2%C2%AC%C3%93%3E%C2%BF%C3%AA%C3%B6.%C3%8F%C3%B4%C3%A2%C3%A8%C2%B9%25%C3%ADa%20%0B%5D%C2%AEN%C3%9A/#%5D%C3%A46%C2%A8(%17%C2%94L%C3%81%C2%AA%C2%A0%C2%A6LG%13%C2%BB%10%C2%AA%C2%BF%C3%AC%C2%B7%C2%BE2A%C2%AB%C2%83%C3%B2%C3%89r%C2%93%C2%B55%60#%C3%BBp%C3%84Db%C2%81-g%03-5%C2%B9m%C2%BCU%C3%86@%C2%9B%C2%BAh%10%05%1A%7D%C2%BD%C2%A9%C2%A4j6%C3%AC5?%06%C3%8B%C3%9C%C2%84%C3%ABz&%09%C3%BC%1BU%C3%9F%00%C2%B2\"}"
        },
        {
          "name": "userProfile",
          "value": "{\"tenantId\":\"1037246\",\"email\":\"visionsjersey@gmail.com\",\"fullName\":\"visions jersey\",\"role\":\"ADMINISTRATOR\",\"roles\":[\"ADMINISTRATOR\"],\"teamIds\":[\"68f92ed55e10376a5c28eccf\"],\"isConfirmQuestionForm\":true,\"shopifyDomain\":null,\"watiAccountList\":[],\"frontEndUrl\":\"https://live.wati.io/1037246\",\"companyIndustry\":null,\"is2FAEnabled\":false,\"is2FABinded\":false,\"token\":\"4cjjSZKqfuTiWqQiWed_bdQsEoA0th6ZYQCcsv96Qh7YWVwayXXr2YxiQUdvoo8fk0E-CYsuRS90DXW7ReuipQFhVSo6ve4WlWQXyQo\",\"refreshToken\":\"yZlRRDXh16kDYFMpAodgMvjargw9wFTZBPWl-R03-jA=\",\"idTokenClaims\":{\"aud\":[\"identity_provider\",\"wati_backend\",\"wati_go\",\"web_client\"],\"c_hash\":\"S79WAy4ME3Jod8-O-LmR2A\",\"client_id\":\"web_client\",\"email\":\"visionsjersey@gmail.com\",\"exp\":1761751630,\"family_name\":\"jersey\",\"given_name\":\"visions\",\"iat\":1761751630,\"iss\":\"https://auth.wati.io\",\"name\":\"visionsjersey@gmail.com\",\"sub\":\"68f92ed55e10376a5c28ecce\",\"tenant_id\":\"1037246\"},\"tenantIdAlias\":null,\"wordpressDomain\":null,\"userLanguage\":null,\"defaultLanguage\":\"en\",\"notificationSetting\":{\"desktopNewChat\":true,\"desktopNewMessage\":true,\"desktopNewChatAssigned\":true,\"desktopNewMessageAssigned\":true,\"desktopNewChatAssignedTeam\":true,\"soundNewChat\":true,\"soundNewMessage\":true,\"soundNewChatAssigned\":true,\"soundNewMessageAssigned\":true,\"soundNewChatAssignedTeam\":true,\"mobileNewChat\":true,\"mobileNewMessage\":true,\"mobileNewChatAssigned\":true,\"mobileNewMessageAssigned\":true,\"mobileNewChatAssignedTeam\":true,\"desktopNotificationVoiceType\":1},\"userId\":\"68f92ed55e10376a5c28ecce\",\"phoneNumber\":\"\",\"isMaskingContactDetails\":false,\"countryByIp\":\"IN\",\"methods\":[],\"firstName\":\"visions\"}"
        },
        {
          "name": "payment",
          "value": "{\"email\":\"visionsjersey@gmail.com\",\"firstName\":\"visions\",\"lastName\":\"jersey\",\"trialEnd\":\"0001-01-01T00:00:00Z\",\"personalNumber\":\"\",\"userId\":\"68f92ed55e10376a5c28ecce\"}"
        },
        {
          "name": "statsig.last_modified_time.evaluations",
          "value": "{\"statsig.cached.evaluations.4010869046\":1761751571902,\"statsig.cached.evaluations.2050906736\":1761751629979,\"statsig.cached.evaluations.263528240\":1761751635394}"
        },
        {
          "name": "intercom.intercom-state-at2ayd3s",
          "value": "{\"app\":{\"openConfig\":{\"unifiedStyling\":true,\"openTo\":\"home\",\"spaces\":[{\"type\":\"home\",\"label\":\"Home\",\"navigationLabel\":\"Home\",\"badge\":null},{\"type\":\"tickets\",\"label\":\"Tickets\",\"navigationLabel\":\"Tickets\",\"badge\":null},{\"type\":\"messages\",\"label\":\"Messages\",\"navigationLabel\":\"Messages\",\"badge\":null},{\"type\":\"help\",\"label\":\"Help\",\"navigationLabel\":\"Help\",\"badge\":null}],\"userHasReceivedChecklists\":false,\"userHasLiveNewsfeed\":false,\"userHasTickets\":false},\"selfServeSuggestionsMatch\":false,\"name\":\"Wati\",\"features\":{\"anonymousInboundMessages\":true,\"googleAnalytics\":false,\"hubspotInstalled\":false,\"inboundMessages\":true,\"marketoEnrichmentInstalled\":false,\"googleAnalytics4Integration\":true},\"helpCenterSiteUrl\":\"https://support.wati.io\",\"inboundConversationsDisabled\":false,\"isDeveloperWorkspace\":false,\"customGoogleAnalyticsTrackerId\":null},\"launcher\":{\"isLauncherEnabled\":true},\"launcherDiscoveryMode\":{\"hasDiscoveredLauncher\":true},\"launcherSettings\":{\"alignment\":\"right\",\"color\":\"#00e785\",\"colorDark\":\"#00e785\",\"hasRequiredFeatures\":true,\"horizontalPadding\":20,\"instantBootEnabled\":true,\"launcherLogoUrl\":\"https://downloads.intercomcdn.com/i/o/at2ayd3s/715493/b4f2df456d8dd1b4249737331f90/bbe2f36d6cf4646b5227da2f44c6f463.png\",\"launcherLogoDarkUrl\":null,\"secondaryColor\":\"#cafde8\",\"secondaryColorDark\":\"#cafde8\",\"showLauncher\":true,\"themeMode\":\"light\",\"updatedAt\":1761693380,\"verticalPadding\":20,\"isLoading\":false},\"user\":{\"role\":\"user\",\"locale\":\"en\",\"hasConversations\":false},\"message\":{},\"conversations\":{\"byId\":{}},\"openOnBoot\":{\"type\":null,\"metadata\":{},\"lastOpenAtTimestamp\":1761751651740},\"operator\":{\"lastComposerEvent\":0},\"router\":{\"isInitialized\":false,\"navigationQueue\":[]}}"
        },
        {
          "name": "dreamdataio.f6a2780d-352d-4833-b565-16cc4f2519ba.ack",
          "value": "1761751663225"
        },
        {
          "name": "topicsLastReferenceTime",
          "value": "1761751633483"
        },
        {
          "name": "CREDIT_CURRENCY_STORAGE_KEY",
          "value": "INR"
        },
        {
          "name": "dreamdataio.f6a2780d-352d-4833-b565-16cc4f2519ba.reclaimStart",
          "value": "null"
        },
        {
          "name": "userpilot:session_id",
          "value": "{\"68f92ed55e10376a5c28ecce\":{\"id\":\"752354173\",\"last_active\":1761751634667}}"
        },
        {
          "name": "i18nextLng",
          "value": "en"
        },
        {
          "name": "isFTUser",
          "value": "true"
        },
        {
          "name": "lastExternalReferrerTime",
          "value": "1761751630085"
        },
        {
          "name": "dreamdataio.f6a2780d-352d-4833-b565-16cc4f2519ba.queue",
          "value": "[]"
        },
        {
          "name": "userpilotUser973134567",
          "value": "{\"token\":\"66fi4k10\",\"version\":\"1.745\",\"endpoint\":\"api.userpilot.io/socket/\",\"domain\":\"js.userpilot.io\",\"accessibility\":1,\"auto_props\":true,\"integrations_interfaces\":{},\"noConflictId\":\"\",\"proxy\":\"socket\",\"broadcastURL\":false,\"pageview\":true,\"sri\":\"\",\"auto_capture\":{},\"callbacks\":{},\"continuity\":0,\"customer\":{\"wati_embedded_signup\":false,\"uid\":\"68f92ed55e10376a5c28ecce\",\"email\":\"visionsjersey@gmail.com\",\"firstName\":\"visions\",\"lastName\":\"jersey\",\"role\":\"ADMINISTRATOR\",\"domain\":\"live.wati.io/1037246\",\"latestChatID\":\"6900f9f70d6e9f9ca7a36d16\",\"signupType\":\"others\",\"trialPlanId\":\"\",\"currency\":\"\",\"locale_code\":\"en\",\"browser_language\":\"en-US\",\"browser\":\"Chrome - Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36\",\"device_type\":\"Desktop\",\"os\":\"Windows\",\"host name\":\"live.wati.io\",\"last_seen\":1,\"viewport_width\":1280,\"viewport_height\":720,\"accountType\":\"PAID\"},\"userid\":\"68f92ed55e10376a5c28ecce\",\"auto\":{\"viewport_width\":1280,\"viewport_height\":720,\"browser_language\":\"en-US\",\"browser\":\"Chrome - Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36\",\"device_type\":\"Desktop\",\"os\":\"Windows\",\"host name\":\"live.wati.io\"}}"
        },
        {
          "name": "statsig.cached.evaluations.2050906736",
          "value": "{\"source\":\"Network\",\"data\":\"{\\\"feature_gates\\\":{\\\"3556498\\\":{\\\"name\\\":\\\"3556498\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4QxAtYhh98CEwN9qaUVMBO\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3690731\\\":{\\\"name\\\":\\\"3690731\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3m9pxrG88h6NycHb87dlmj:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"19047894\\\":{\\\"name\\\":\\\"19047894\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2wjPFdrMaU7qtS4crBnDBN:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"24118183\\\":{\\\"name\\\":\\\"24118183\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Fdu4GRzg83EHqU1vvf2Ab:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"29873538\\\":{\\\"name\\\":\\\"29873538\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2NR7myiK0q8QK7pn4PevxP:100.00:11\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"35912392\\\":{\\\"name\\\":\\\"35912392\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"36309801\\\":{\\\"name\\\":\\\"36309801\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1Ms76z5gIXs2PWqKWuIxoj:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"56825500\\\":{\\\"name\\\":\\\"56825500\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"65385529\\\":{\\\"name\\\":\\\"65385529\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"117744020\\\":{\\\"name\\\":\\\"117744020\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"134943526\\\":{\\\"name\\\":\\\"134943526\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3PbrYF0EO3o9O3uEYLXADv:0.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"137429910\\\":{\\\"name\\\":\\\"137429910\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"151951309\\\":{\\\"name\\\":\\\"151951309\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"176189447\\\":{\\\"name\\\":\\\"176189447\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2jyC65bRjuI3FHQqJHG01J:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"192226381\\\":{\\\"name\\\":\\\"192226381\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"44lHOgtXF4TtxCw8hrYtQv:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"213795005\\\":{\\\"name\\\":\\\"213795005\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"237057907\\\":{\\\"name\\\":\\\"237057907\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"frFbSWQXoGvd93MFKPomj\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"250944335\\\":{\\\"name\\\":\\\"250944335\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"257859813\\\":{\\\"name\\\":\\\"257859813\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"276988480\\\":{\\\"name\\\":\\\"276988480\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"284158622\\\":{\\\"name\\\":\\\"284158622\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"291856187\\\":{\\\"name\\\":\\\"291856187\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"330054939\\\":{\\\"name\\\":\\\"330054939\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4K1XOPZyLEDHXddCcbXK0t\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"338390626\\\":{\\\"name\\\":\\\"338390626\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3YlR6wlomAcWeKeYa4OOgp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"341488802\\\":{\\\"name\\\":\\\"341488802\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3El8Il7Wkgkwbempfcjy1c:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"342433810\\\":{\\\"name\\\":\\\"342433810\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"346372535\\\":{\\\"name\\\":\\\"346372535\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3irkhfT3OLvIVlk2Ks5jxW:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"354295315\\\":{\\\"name\\\":\\\"354295315\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"370982552\\\":{\\\"name\\\":\\\"370982552\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"387795292\\\":{\\\"name\\\":\\\"387795292\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ykgj4HSe2nyq6qNOmHBWP:0.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"397098067\\\":{\\\"name\\\":\\\"397098067\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1RIDJHI2dx6jXk7iKPvLQt:0.00:9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"448919431\\\":{\\\"name\\\":\\\"448919431\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"471803185\\\":{\\\"name\\\":\\\"471803185\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"489203531\\\":{\\\"name\\\":\\\"489203531\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2rBgJwGK0Jq5ByVr4n6d0v:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"549937556\\\":{\\\"name\\\":\\\"549937556\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"556096570\\\":{\\\"name\\\":\\\"556096570\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"569576755\\\":{\\\"name\\\":\\\"569576755\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"586990305\\\":{\\\"name\\\":\\\"586990305\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"594541863\\\":{\\\"name\\\":\\\"594541863\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7f9mzIJLrstdBQwbEADfuG:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"619413141\\\":{\\\"name\\\":\\\"619413141\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1xqICj0w1e3oNwlXaSM60Z:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"646508337\\\":{\\\"name\\\":\\\"646508337\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2nkJ2RERJeHQYdDO1qMB9B:100.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"662641987\\\":{\\\"name\\\":\\\"662641987\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4UBQHuB5cpfiJ6IPohCZRf:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"670288179\\\":{\\\"name\\\":\\\"670288179\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"753150926\\\":{\\\"name\\\":\\\"753150926\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3V5bWjOaeUNBFIKyTQtO2b\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"796473002\\\":{\\\"name\\\":\\\"796473002\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"803274003\\\":{\\\"name\\\":\\\"803274003\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"805204947\\\":{\\\"name\\\":\\\"805204947\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"820312485\\\":{\\\"name\\\":\\\"820312485\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"821183823\\\":{\\\"name\\\":\\\"821183823\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"825413842\\\":{\\\"name\\\":\\\"825413842\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"853733906\\\":{\\\"name\\\":\\\"853733906\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"864205161\\\":{\\\"name\\\":\\\"864205161\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"snV6cM0pQy8Vdr6KxXSr5:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"874254006\\\":{\\\"name\\\":\\\"874254006\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"883485656\\\":{\\\"name\\\":\\\"883485656\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"898248959\\\":{\\\"name\\\":\\\"898248959\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"904719398\\\":{\\\"name\\\":\\\"904719398\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"923541420\\\":{\\\"name\\\":\\\"923541420\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"926323500\\\":{\\\"name\\\":\\\"926323500\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"931446997\\\":{\\\"name\\\":\\\"931446997\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"949752030\\\":{\\\"name\\\":\\\"949752030\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7wROqUIYKEw5waG2bUTiKh\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"952116887\\\":{\\\"name\\\":\\\"952116887\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"955008015\\\":{\\\"name\\\":\\\"955008015\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7zDPHF9SQ4CkgOWE2pUqGc:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"981305169\\\":{\\\"name\\\":\\\"981305169\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"997192322\\\":{\\\"name\\\":\\\"997192322\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7HWYnF5KFwJUSMaUoJJJUW:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1021178329\\\":{\\\"name\\\":\\\"1021178329\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1029736013\\\":{\\\"name\\\":\\\"1029736013\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1037676453\\\":{\\\"name\\\":\\\"1037676453\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1ok2QE9y5vjuJIbDSlMIQ2:0.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1062775714\\\":{\\\"name\\\":\\\"1062775714\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1070934160\\\":{\\\"name\\\":\\\"1070934160\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"qC5sNXInPvgR6w7XrvyWQ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1085020658\\\":{\\\"name\\\":\\\"1085020658\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1103331817\\\":{\\\"name\\\":\\\"1103331817\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1108276615\\\":{\\\"name\\\":\\\"1108276615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1119588136\\\":{\\\"name\\\":\\\"1119588136\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1120956135\\\":{\\\"name\\\":\\\"1120956135\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4I27WOJBiPIMoNkKSGbK52:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1176684932\\\":{\\\"name\\\":\\\"1176684932\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1204453427\\\":{\\\"name\\\":\\\"1204453427\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3KD2OHAXsNbrQP5Vm3DdVm\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1205795392\\\":{\\\"name\\\":\\\"1205795392\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1217919578\\\":{\\\"name\\\":\\\"1217919578\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1235342138\\\":{\\\"name\\\":\\\"1235342138\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4A3rsJZD9kQ6zmbb4qk7cC:100.00:6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1237411615\\\":{\\\"name\\\":\\\"1237411615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"K05Ct90CVKv6G0pMV3cfr:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1246796578\\\":{\\\"name\\\":\\\"1246796578\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3KL6C3vNGacF1M2FmITMCU:100.00:12\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1258581238\\\":{\\\"name\\\":\\\"1258581238\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"CO6B3EGu0BmKdTpgWnaoG:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1272450172\\\":{\\\"name\\\":\\\"1272450172\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ghEJv4Qt4UlUB3tJFxeyJ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1319726583\\\":{\\\"name\\\":\\\"1319726583\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1347676252\\\":{\\\"name\\\":\\\"1347676252\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1389735471\\\":{\\\"name\\\":\\\"1389735471\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4Vih3jQcufZPYsZnPTAfIp:0.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1398813458\\\":{\\\"name\\\":\\\"1398813458\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3atcKMrHOHa4PXJF3Dfhel:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1417562847\\\":{\\\"name\\\":\\\"1417562847\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1420189732\\\":{\\\"name\\\":\\\"1420189732\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1442403526\\\":{\\\"name\\\":\\\"1442403526\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7peUzjkYeOFgp2mRfXbzih:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1448588679\\\":{\\\"name\\\":\\\"1448588679\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5W1Kc8G6GGT3ktlUmqgRV5:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1468072136\\\":{\\\"name\\\":\\\"1468072136\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2XairiP46gB0I63k5tNP5B\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1472468720\\\":{\\\"name\\\":\\\"1472468720\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1474535541\\\":{\\\"name\\\":\\\"1474535541\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1494595529\\\":{\\\"name\\\":\\\"1494595529\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"22iywJe8Qz5WI0dhYYuKFt:100.00:5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1495765263\\\":{\\\"name\\\":\\\"1495765263\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1vlIg8rrHas7k2Mcw8IeDM:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1506699038\\\":{\\\"name\\\":\\\"1506699038\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1535466856\\\":{\\\"name\\\":\\\"1535466856\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"1548368528\\\":{\\\"name\\\":\\\"1548368528\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1556961638\\\":{\\\"name\\\":\\\"1556961638\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1556962082\\\":{\\\"name\\\":\\\"1556962082\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1561594747\\\":{\\\"name\\\":\\\"1561594747\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1562372427\\\":{\\\"name\\\":\\\"1562372427\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1568030702\\\":{\\\"name\\\":\\\"1568030702\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1578064793\\\":{\\\"name\\\":\\\"1578064793\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1626539492\\\":{\\\"name\\\":\\\"1626539492\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Bbd1GvsyMJwZzi1WKpEcp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1660837176\\\":{\\\"name\\\":\\\"1660837176\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3pKuvniNGzHQdKs9EDzlG2:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1676271509\\\":{\\\"name\\\":\\\"1676271509\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1708913788\\\":{\\\"name\\\":\\\"1708913788\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6cugV7tpqu5LewxpOQ4ipb:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1773058922\\\":{\\\"name\\\":\\\"1773058922\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4Ix7l4IWyemZPlAsj6YT7n\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1812806533\\\":{\\\"name\\\":\\\"1812806533\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"34OumqQVT3dSMvQIJzE2Oh\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1829974633\\\":{\\\"name\\\":\\\"1829974633\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1854107166\\\":{\\\"name\\\":\\\"1854107166\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1868168216\\\":{\\\"name\\\":\\\"1868168216\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1884412781\\\":{\\\"name\\\":\\\"1884412781\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1886644922\\\":{\\\"name\\\":\\\"1886644922\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1895315665\\\":{\\\"name\\\":\\\"1895315665\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1906469985\\\":{\\\"name\\\":\\\"1906469985\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1914340998\\\":{\\\"name\\\":\\\"1914340998\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1919743132\\\":{\\\"name\\\":\\\"1919743132\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3YmZaHNTUy2v0E7vOVgqnV:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1927985405\\\":{\\\"name\\\":\\\"1927985405\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1935132290\\\":{\\\"name\\\":\\\"1935132290\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1938431766\\\":{\\\"name\\\":\\\"1938431766\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1PpEh51QekOg48dIyy0EhS:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1947021730\\\":{\\\"name\\\":\\\"1947021730\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1967442834\\\":{\\\"name\\\":\\\"1967442834\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5cJjL9m5KKGxxuvmba9b7m\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1994770822\\\":{\\\"name\\\":\\\"1994770822\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2004573773\\\":{\\\"name\\\":\\\"2004573773\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2034771199\\\":{\\\"name\\\":\\\"2034771199\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7kvuwiskCBVu90bHHeiO73\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2050862886\\\":{\\\"name\\\":\\\"2050862886\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2077485919\\\":{\\\"name\\\":\\\"2077485919\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2089382773\\\":{\\\"name\\\":\\\"2089382773\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6HzltDPRzvdzEPBEpEgtGX:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2090111152\\\":{\\\"name\\\":\\\"2090111152\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2bwNHNbaVSviQLaFSnx507:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2102055349\\\":{\\\"name\\\":\\\"2102055349\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2105601866\\\":{\\\"name\\\":\\\"2105601866\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2118537617\\\":{\\\"name\\\":\\\"2118537617\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3o8X3FGwxrPeg1oNE2H51g\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2139079692\\\":{\\\"name\\\":\\\"2139079692\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2148008700\\\":{\\\"name\\\":\\\"2148008700\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7dWLGe4ucjPtAT5TOuXHLb\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2160693005\\\":{\\\"name\\\":\\\"2160693005\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2179063667\\\":{\\\"name\\\":\\\"2179063667\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2FAzrpzaTbXFGxkuNi68gs\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2180353316\\\":{\\\"name\\\":\\\"2180353316\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ZuSFJNqAw7KVdvr9MAyGL\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2182141949\\\":{\\\"name\\\":\\\"2182141949\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2189106183\\\":{\\\"name\\\":\\\"2189106183\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2211880815\\\":{\\\"name\\\":\\\"2211880815\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3ojeS7gcAbYoOk2GpTyybv:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2241558617\\\":{\\\"name\\\":\\\"2241558617\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"48NYlf9Gl9BHiUahXyYjBh:100.00:5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2263396675\\\":{\\\"name\\\":\\\"2263396675\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2263963260\\\":{\\\"name\\\":\\\"2263963260\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2297330149\\\":{\\\"name\\\":\\\"2297330149\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3fI9Mfd26G1Ie2DkX8SCkl\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2304477102\\\":{\\\"name\\\":\\\"2304477102\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5C6p2DDRZeEWKurvzT44hP:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2320160280\\\":{\\\"name\\\":\\\"2320160280\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7z8FWDSuRGijet8IvuNRzk:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2328991501\\\":{\\\"name\\\":\\\"2328991501\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2335627606\\\":{\\\"name\\\":\\\"2335627606\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4AqN4yVPWVAiJbp82VnWad:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2336798793\\\":{\\\"name\\\":\\\"2336798793\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5gSZHjvtlA1BfCvex6dDOR:100.00:80\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2338023897\\\":{\\\"name\\\":\\\"2338023897\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1MHJbJuhF20wKWtTVu13RV\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2349827811\\\":{\\\"name\\\":\\\"2349827811\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2353314921\\\":{\\\"name\\\":\\\"2353314921\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2362591192\\\":{\\\"name\\\":\\\"2362591192\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2442533097\\\":{\\\"name\\\":\\\"2442533097\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4qGqzfb0MRU7fvMU9mZFl\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2444721653\\\":{\\\"name\\\":\\\"2444721653\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5PltwB1eF9UmeIRaULNl6p:100.00:22\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2458303051\\\":{\\\"name\\\":\\\"2458303051\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2459650299\\\":{\\\"name\\\":\\\"2459650299\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"32vEIEcCor82a5Koga9Avp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489235331\\\":{\\\"name\\\":\\\"2489235331\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489452866\\\":{\\\"name\\\":\\\"2489452866\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4jqWTV1DB0NzsHhlKy0mvg:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[{\\\"gate\\\":\\\"nrF4jgDvhZQwSWreFpseRLLbdgZG3CqNgVICBnuW1id\\\",\\\"gateValue\\\":\\\"true\\\",\\\"ruleID\\\":\\\"6cugV7tpqu5LewxpOQ4ipb:100.00:8\\\"}]},\\\"2496433416\\\":{\\\"name\\\":\\\"2496433416\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4tq2GNsD9ffR0ZgqlzrLBG\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2502667786\\\":{\\\"name\\\":\\\"2502667786\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1K1HvRqu38SBPWcab6U9y8:0.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2506326034\\\":{\\\"name\\\":\\\"2506326034\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3lrRtMXSmuLEXtvZ5bYShP\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2527521448\\\":{\\\"name\\\":\\\"2527521448\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2C3gETnlz62XUeHmjBeGDJ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2528449374\\\":{\\\"name\\\":\\\"2528449374\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3kTttiGlGQmtUJNC5Lce3W\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2529475342\\\":{\\\"name\\\":\\\"2529475342\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2540052713\\\":{\\\"name\\\":\\\"2540052713\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6j3Bd5pO6BxQG8QvTtuPJh\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2544337905\\\":{\\\"name\\\":\\\"2544337905\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5FmuLtr57GyxoPs8ixvJF7:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2565877796\\\":{\\\"name\\\":\\\"2565877796\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"SiLWvEUWpPDGSRik4Eq65:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2568255691\\\":{\\\"name\\\":\\\"2568255691\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1O5qOMGxClQAnbbWUqXUqX\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2656813585\\\":{\\\"name\\\":\\\"2656813585\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"q5IO7PaiBvNJ1xLRULsd5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2667240513\\\":{\\\"name\\\":\\\"2667240513\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2678683376\\\":{\\\"name\\\":\\\"2678683376\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3ietdPLnmNOMINVXohy4gv\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2706537359\\\":{\\\"name\\\":\\\"2706537359\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2716921513\\\":{\\\"name\\\":\\\"2716921513\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2738213561\\\":{\\\"name\\\":\\\"2738213561\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2760099186\\\":{\\\"name\\\":\\\"2760099186\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3xD0LTPHYvmbCm8UB665l0:100.00:10\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2774466021\\\":{\\\"name\\\":\\\"2774466021\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2791203086\\\":{\\\"name\\\":\\\"2791203086\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2797658677\\\":{\\\"name\\\":\\\"2797658677\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2799938645\\\":{\\\"name\\\":\\\"2799938645\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"ImkACYRhVeMhDLzUMI4hF\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2800814367\\\":{\\\"name\\\":\\\"2800814367\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2LoicVadZlYnH9kwaI6XAV\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2812329042\\\":{\\\"name\\\":\\\"2812329042\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2836004458\\\":{\\\"name\\\":\\\"2836004458\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"l1LPn2F0idXpS5Mvjyo2c\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2857545436\\\":{\\\"name\\\":\\\"2857545436\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2865622437\\\":{\\\"name\\\":\\\"2865622437\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2887036538\\\":{\\\"name\\\":\\\"2887036538\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2903204993\\\":{\\\"name\\\":\\\"2903204993\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2903855436\\\":{\\\"name\\\":\\\"2903855436\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"23h9cSkXIwWPb9icf98AlN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2923228060\\\":{\\\"name\\\":\\\"2923228060\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4oAzfSaLJS75pKMPxuwd2w:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2944538919\\\":{\\\"name\\\":\\\"2944538919\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3jCuzilPPBXsSsDIP0pfDs:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2954467846\\\":{\\\"name\\\":\\\"2954467846\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2955801362\\\":{\\\"name\\\":\\\"2955801362\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"EpkfArs8xqCIxEWeYzIi3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2963199434\\\":{\\\"name\\\":\\\"2963199434\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4IdDkqYOvftwWOfFFVdYsn\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2990421729\\\":{\\\"name\\\":\\\"2990421729\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3085682210\\\":{\\\"name\\\":\\\"3085682210\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3141309457\\\":{\\\"name\\\":\\\"3141309457\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3144147760\\\":{\\\"name\\\":\\\"3144147760\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4fxxtLlTOdoiTj4Aq0HSzs:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3174538403\\\":{\\\"name\\\":\\\"3174538403\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3191221983\\\":{\\\"name\\\":\\\"3191221983\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3194979216\\\":{\\\"name\\\":\\\"3194979216\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3215096882\\\":{\\\"name\\\":\\\"3215096882\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"3221432098\\\":{\\\"name\\\":\\\"3221432098\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4NrF0VljZ6Usu4DSwupLGP\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3244486900\\\":{\\\"name\\\":\\\"3244486900\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3250220129\\\":{\\\"name\\\":\\\"3250220129\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"PpKjd6sAB17aMbc5c4X1H:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3250418731\\\":{\\\"name\\\":\\\"3250418731\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3273802703\\\":{\\\"name\\\":\\\"3273802703\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"78CdH73U2fdTwW33YzxVzE\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3286753640\\\":{\\\"name\\\":\\\"3286753640\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3292969639\\\":{\\\"name\\\":\\\"3292969639\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3298704730\\\":{\\\"name\\\":\\\"3298704730\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2hvJFWwLqAZ3kDABskH9eX:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3301231973\\\":{\\\"name\\\":\\\"3301231973\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3325445310\\\":{\\\"name\\\":\\\"3325445310\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3330616214\\\":{\\\"name\\\":\\\"3330616214\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"Y5eZ0Y1Yz7316MMcDP4Vk:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3347230130\\\":{\\\"name\\\":\\\"3347230130\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"5OZNX9vmjUkm8L2uNqiE0Y\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3357819914\\\":{\\\"name\\\":\\\"3357819914\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7iAZ39zj8sabQTtTRGwNqv:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3358625901\\\":{\\\"name\\\":\\\"3358625901\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3373495869\\\":{\\\"name\\\":\\\"3373495869\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4s1SRFHxk70rmXXEyCR7GE:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3409438888\\\":{\\\"name\\\":\\\"3409438888\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3M5ghQBOpYABxdGEXMXRHF\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3456074481\\\":{\\\"name\\\":\\\"3456074481\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6itxdXWr8kMAhXcH63vdjP:0.00:18\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3476679401\\\":{\\\"name\\\":\\\"3476679401\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3481625769\\\":{\\\"name\\\":\\\"3481625769\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2GMXoP8uI1wvGbAdZAK8bH\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3495695983\\\":{\\\"name\\\":\\\"3495695983\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3509124063\\\":{\\\"name\\\":\\\"3509124063\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3517453746\\\":{\\\"name\\\":\\\"3517453746\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3NZ62QpiIpAMQ2zziuX68h:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3529694804\\\":{\\\"name\\\":\\\"3529694804\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3s98XbQC3LhAbEdNGAn9LB:50.00:13\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3535936328\\\":{\\\"name\\\":\\\"3535936328\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"NwgJZZjSjpyHcw2Q1FDgf\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3538762292\\\":{\\\"name\\\":\\\"3538762292\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3TZYAkDStPgw1xTQpExhY1:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3571117319\\\":{\\\"name\\\":\\\"3571117319\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3585785973\\\":{\\\"name\\\":\\\"3585785973\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2UjFM6N90ICj6rykms968t:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3587105173\\\":{\\\"name\\\":\\\"3587105173\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"45V8cm3Jl76aiv9lVtGM7J\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3591679915\\\":{\\\"name\\\":\\\"3591679915\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4532ELB7rjScS8ZqRXmPmO:100.00:5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3599883158\\\":{\\\"name\\\":\\\"3599883158\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7iAjw9P7uYC2l6D5P4UZEM\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3602404150\\\":{\\\"name\\\":\\\"3602404150\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3604760265\\\":{\\\"name\\\":\\\"3604760265\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3608765262\\\":{\\\"name\\\":\\\"3608765262\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4o9cvDPQtVxEMtB67pEYYW\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3612827893\\\":{\\\"name\\\":\\\"3612827893\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6WQhvCIO0WCXKPlaqF13tg:100.00:12\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3625418394\\\":{\\\"name\\\":\\\"3625418394\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3629211338\\\":{\\\"name\\\":\\\"3629211338\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3632185250\\\":{\\\"name\\\":\\\"3632185250\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"uS5SdmfBaK2UINQGhNko6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3638300699\\\":{\\\"name\\\":\\\"3638300699\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3642739548\\\":{\\\"name\\\":\\\"3642739548\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5PMQTNwFCZtBR7arZFXCuo\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3649526019\\\":{\\\"name\\\":\\\"3649526019\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2pAlIJIGb0OqUokTDq8HAx\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3658435963\\\":{\\\"name\\\":\\\"3658435963\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1D7nVkdssnG5AY9evN1IO3:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3681005650\\\":{\\\"name\\\":\\\"3681005650\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7mbYvE2g0nrLIXGQbAynFl:100.00:6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3683570479\\\":{\\\"name\\\":\\\"3683570479\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3718850965\\\":{\\\"name\\\":\\\"3718850965\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3719413687\\\":{\\\"name\\\":\\\"3719413687\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3727136946\\\":{\\\"name\\\":\\\"3727136946\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5IUo9ADyMD9EKrr63slviL\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3728973660\\\":{\\\"name\\\":\\\"3728973660\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"786GedWy6ajgR3EGw4VLw7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3748838155\\\":{\\\"name\\\":\\\"3748838155\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"J95e6o0gS7fanPV6fV0lW\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3758266271\\\":{\\\"name\\\":\\\"3758266271\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6xMf6EuU3SWw0vKNYeqlrh:100.00:17\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3767477981\\\":{\\\"name\\\":\\\"3767477981\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3773638854\\\":{\\\"name\\\":\\\"3773638854\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3WMQLcu2Q1HcmHrQlxffkN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3777622887\\\":{\\\"name\\\":\\\"3777622887\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3790246742\\\":{\\\"name\\\":\\\"3790246742\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3806631862\\\":{\\\"name\\\":\\\"3806631862\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4IZ7QR6jvfsc82IuNWhEsN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3835808111\\\":{\\\"name\\\":\\\"3835808111\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"V3iw7NppykR043EDPBZvX:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3855301715\\\":{\\\"name\\\":\\\"3855301715\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3865786566\\\":{\\\"name\\\":\\\"3865786566\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"OqzXi9P1TeMv8enCRUMUA:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3907001491\\\":{\\\"name\\\":\\\"3907001491\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3EEdphI6jfFhX7c97DvO1W\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3914744596\\\":{\\\"name\\\":\\\"3914744596\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6qH1qw9MBu9iHQG29RJUdE\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3931859276\\\":{\\\"name\\\":\\\"3931859276\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3935694520\\\":{\\\"name\\\":\\\"3935694520\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3955684342\\\":{\\\"name\\\":\\\"3955684342\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3961057518\\\":{\\\"name\\\":\\\"3961057518\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3966685453\\\":{\\\"name\\\":\\\"3966685453\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6mhJ7BBZUVJjMnvVxH3ahm\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3972294244\\\":{\\\"name\\\":\\\"3972294244\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3994938899\\\":{\\\"name\\\":\\\"3994938899\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2vZCfOQjlzPr0EBS5vTpdH\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4021931638\\\":{\\\"name\\\":\\\"4021931638\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3TxtYp2fwEis1mA7EuvHeI:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4037209004\\\":{\\\"name\\\":\\\"4037209004\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Ra6YSHijhn1R5gH0o5bI9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4059817396\\\":{\\\"name\\\":\\\"4059817396\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4062690877\\\":{\\\"name\\\":\\\"4062690877\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4062693929\\\":{\\\"name\\\":\\\"4062693929\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6Ra54abnvVkFDRwXgkDgV:0.00:11\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4075833615\\\":{\\\"name\\\":\\\"4075833615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4094412970\\\":{\\\"name\\\":\\\"4094412970\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"36WTwY8EiKrpGwjoclZPav\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4108510704\\\":{\\\"name\\\":\\\"4108510704\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4SU6X72OoW2fCiWHWGTUT6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4109649425\\\":{\\\"name\\\":\\\"4109649425\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2PY3f69gocNhMWsZfiZrjS:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4118986142\\\":{\\\"name\\\":\\\"4118986142\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3dzuyjC6jWGmOLOXDQWQjg:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4122069007\\\":{\\\"name\\\":\\\"4122069007\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6mGKkyDXisCuTi1rq1eUYq\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4132708234\\\":{\\\"name\\\":\\\"4132708234\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7p8TcgU7jsU5eESu7js6A9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4134345213\\\":{\\\"name\\\":\\\"4134345213\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"37g39BBKM4jBXy3R5JWUll\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4164590530\\\":{\\\"name\\\":\\\"4164590530\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4166169096\\\":{\\\"name\\\":\\\"4166169096\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"60f2yAtZCtZTk7AUNIOLi2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4194040058\\\":{\\\"name\\\":\\\"4194040058\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4196421268\\\":{\\\"name\\\":\\\"4196421268\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4198030330\\\":{\\\"name\\\":\\\"4198030330\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4q9eW8Kk4PrfUIXTHwUA9i:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4198063952\\\":{\\\"name\\\":\\\"4198063952\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3dslib2UsBksPhClaLfXbu:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4219963017\\\":{\\\"name\\\":\\\"4219963017\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"UkJpCvtZh3ZNc253R5xej\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4230211647\\\":{\\\"name\\\":\\\"4230211647\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5HJT0KNtzBysTJJIwN93Ur:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4245238253\\\":{\\\"name\\\":\\\"4245238253\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5K3Ss6ACkacjo5u0fVuiH5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4249130196\\\":{\\\"name\\\":\\\"4249130196\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1GylpY0kJLasbUv583LqHZ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4255107497\\\":{\\\"name\\\":\\\"4255107497\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4272153326\\\":{\\\"name\\\":\\\"4272153326\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1oFlTGVYDYsnuCd0v606x5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]}},\\\"dynamic_configs\\\":{\\\"198152316\\\":{\\\"name\\\":\\\"198152316\\\",\\\"value\\\":{\\\"thresholdDay\\\":14},\\\"rule_id\\\":\\\"4ZGogckXokCfUxqiaLH5ve\\\",\\\"group\\\":\\\"4ZGogckXokCfUxqiaLH5ve\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"201017248\\\":{\\\"name\\\":\\\"201017248\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"739965369\\\":{\\\"name\\\":\\\"739965369\\\",\\\"value\\\":{\\\"thresholdMessageCount\\\":1,\\\"mmapiRoutingRatio\\\":0},\\\"rule_id\\\":\\\"TAvwErnTk3Rmdf1mnhVBq\\\",\\\"group\\\":\\\"TAvwErnTk3Rmdf1mnhVBq\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1119399031\\\":{\\\"name\\\":\\\"1119399031\\\",\\\"value\\\":{\\\"connect_number\\\":\\\"\\\"},\\\"rule_id\\\":\\\"launchedGroup\\\",\\\"group\\\":\\\"launchedGroup\\\",\\\"group_name\\\":\\\"Test\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1127325973\\\":{\\\"name\\\":\\\"1127325973\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1140243592\\\":{\\\"name\\\":\\\"1140243592\\\",\\\"value\\\":{\\\"displayPeriod\\\":7,\\\"displayPaths\\\":[\\\"/\\\"]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1228945520\\\":{\\\"name\\\":\\\"1228945520\\\",\\\"value\\\":{\\\"enabled_multiple_wa_numbers_plans\\\":[\\\"Business-Plan\\\",\\\"Enterprise-Plan\\\"]},\\\"rule_id\\\":\\\"6hEuwWunqvpIj8JEOmh7Pm:100.00:3-11WG70T4DuaMG7agsFn5Lc\\\",\\\"group\\\":\\\"6hEuwWunqvpIj8JEOmh7Pm:100.00:3-11WG70T4DuaMG7agsFn5Lc\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1252254248\\\":{\\\"name\\\":\\\"1252254248\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1657359845\\\":{\\\"name\\\":\\\"1657359845\\\",\\\"value\\\":{\\\"segment_1\\\":{\\\"feature_settings\\\":[\\\"KnowBot\\\"],\\\"user_roles\\\":[\\\"ADMINISTRATOR\\\",\\\"AUTOMATION_MANAGER\\\",\\\"EXTERNAL_ADMINISTRATOR\\\"],\\\"number_of_knowbots\\\":{\\\"operator\\\":\\\"=\\\",\\\"value\\\":0}},\\\"segment_2\\\":{\\\"user_roles\\\":[\\\"ADMINISTRATOR\\\",\\\"AUTOMATION_MANAGER\\\",\\\"EXTERNAL_ADMINISTRATOR\\\"],\\\"knowbot_usage_by_months\\\":{\\\"month\\\":3,\\\"usage\\\":{\\\"operator\\\":\\\">\\\",\\\"value\\\":0}},\\\"number_of_knowbots\\\":{\\\"operator\\\":\\\">\\\",\\\"value\\\":0}}},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1772852090\\\":{\\\"name\\\":\\\"1772852090\\\",\\\"value\\\":{\\\"displayPeriod\\\":7},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1867650129\\\":{\\\"name\\\":\\\"1867650129\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1936679860\\\":{\\\"name\\\":\\\"1936679860\\\",\\\"value\\\":{\\\"plans\\\":[\\\"abc\\\"]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":true,\\\"passed\\\":false,\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"1991952245\\\":{\\\"name\\\":\\\"1991952245\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"2209800305\\\":{\\\"name\\\":\\\"2209800305\\\",\\\"value\\\":{\\\"TenantIDs\\\":[\\\"365443\\\",\\\"393307\\\"]},\\\"rule_id\\\":\\\"6HNnx6fwYnd7oY1nudAVoI:100.00:2\\\",\\\"group\\\":\\\"6HNnx6fwYnd7oY1nudAVoI:100.00:2\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2281530840\\\":{\\\"name\\\":\\\"2281530840\\\",\\\"value\\\":{\\\"business-year_business-month\\\":{\\\"isDowngrade\\\":true,\\\"needFeatureCheck\\\":false},\\\"standard-month_growth-month\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"standard-month_growth-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"standard-year_growth-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":false},\\\"pro-month_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":false},\\\"professional-month_pro-month\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"professional-month_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"professional-year_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true}},\\\"rule_id\\\":\\\"3M2CT8wAkisnx4D34CqOkV:100.00:1-3M2CT6RxS0iTdF57tuvb1T\\\",\\\"group\\\":\\\"3M2CT8wAkisnx4D34CqOkV:100.00:1-3M2CT6RxS0iTdF57tuvb1T\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2294648607\\\":{\\\"name\\\":\\\"2294648607\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"WJ7xApZjbJEY5QQ2t2Hts:0.00:8\\\",\\\"group\\\":\\\"WJ7xApZjbJEY5QQ2t2Hts:0.00:8\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489550326\\\":{\\\"name\\\":\\\"2489550326\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2517717277\\\":{\\\"name\\\":\\\"2517717277\\\",\\\"value\\\":{\\\"call_partners\\\":[]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2862204285\\\":{\\\"name\\\":\\\"2862204285\\\",\\\"value\\\":{\\\"advertisement_layout\\\":\\\"top\\\"},\\\"rule_id\\\":\\\"7GAy6NR6nLojhfmnHOFNu0\\\",\\\"group\\\":\\\"7GAy6NR6nLojhfmnHOFNu0\\\",\\\"group_name\\\":\\\"Control\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":true,\\\"is_user_in_experiment\\\":true,\\\"secondary_exposures\\\":[]},\\\"3025766574\\\":{\\\"name\\\":\\\"3025766574\\\",\\\"value\\\":{\\\"existing_plan_ids\\\":[\\\"Business-Plan-GBP-Yearly\\\",\\\"Business-Plan-GBP-Every-6-months\\\",\\\"Business-Plan-GBP-Every-3-months\\\",\\\"Business-Plan-GBP-Monthly\\\",\\\"Pro-Plan-GBP-Yearly\\\",\\\"Pro-Plan-GBP-Every-6-months\\\",\\\"Pro-Plan-GBP-Every-3-months\\\",\\\"Pro-Plan-GBP-Monthly\\\",\\\"Growth-Plan-GBP-Yearly\\\",\\\"Growth-Plan-GBP-Every-6-months\\\",\\\"Growth-Plan-GBP-Every-3-months\\\",\\\"Growth-Plan-GBP-Monthly\\\",\\\"Business-Plan-EUR-Yearly\\\",\\\"Business-Plan-EUR-Every-6-months\\\",\\\"Business-Plan-EUR-Every-3-months\\\",\\\"Business-Plan-EUR-Monthly\\\",\\\"Pro-Plan-EUR-Yearly\\\",\\\"Pro-Plan-EUR-Every-6-months\\\",\\\"Pro-Plan-EUR-Every-3-months\\\",\\\"Pro-Plan-EUR-Monthly\\\",\\\"Growth-Plan-EUR-Yearly\\\",\\\"Growth-Plan-EUR-Every-6-months\\\",\\\"Growth-Plan-EUR-Every-3-months\\\",\\\"Growth-Plan-EUR-Monthly\\\",\\\"Growth-Usage-Plan-USD-Yearly\\\",\\\"Growth-Usage-Plan-USD-Monthly\\\",\\\"Flexi-Plan-INR-Every-15-years\\\",\\\"BV-paused---0-BRL-Monthly\\\",\\\"Growth-Plan-USD-Every-3-months\\\",\\\"Growth-Plan-USD-Every-6-months\\\",\\\"Growth-Plan-INR-Every-3-months\\\",\\\"Growth-Plan-INR-Every-6-months\\\",\\\"Growth-Plan-BRL-Every-3-months\\\",\\\"Growth-Plan-BRL-Every-6-months\\\",\\\"Growth-Plan-HKD-Every-3-months\\\",\\\"Growth-Plan-HKD-Every-6-months\\\",\\\"Pro-Plan-USD-Every-3-months\\\",\\\"Pro-Plan-USD-Every-6-months\\\",\\\"Pro-Plan-INR-Every-3-months\\\",\\\"Pro-Plan-INR-Every-6-months\\\",\\\"Pro-Plan-BRL-Every-3-months\\\",\\\"Pro-Plan-BRL-Every-6-months\\\",\\\"Pro-Plan-HKD-Every-3-months\\\",\\\"Pro-Plan-HKD-Every-6-months\\\",\\\"Business-Plan-USD-Every-3-months\\\",\\\"Business-Plan-USD-Every-6-months\\\",\\\"Business-Plan-INR-Every-3-months\\\",\\\"Business-Plan-INR-Every-6-months\\\",\\\"Business-Plan-BRL-Every-3-months\\\",\\\"Business-Plan-BRL-Every-6-months\\\",\\\"Business-Plan-HKD-Every-3-months\\\",\\\"Business-Plan-HKD-Every-6-months\\\",\\\"Professional-Plan-Advantage-USD-Yearly\\\",\\\"Professional-Plan-Advantage-USD-Monthly\\\",\\\"Standard-Plan-Advantage-USD-Yearly\\\",\\\"Standard-Plan-Advantage-USD-Monthly\\\",\\\"Enterprise---General---WATI-USD-Yearly\\\",\\\"Standard-Plan---Enterprise-HKD-Yearly\\\",\\\"Standard-Plan---Enterprise-USD-Yearly\\\",\\\"Standard-Plan---Enterprise-USD-Monthly\\\",\\\"Enterprise---General-HKD-Monthly\\\",\\\"Enterprise---General---WATI-INR-Monthly\\\",\\\"Enterprise---General-HKD-Yearly\\\",\\\"Pro-Plan-HKD-Yearly\\\",\\\"Pro-Plan-HKD-Monthly\\\",\\\"Pro-Plan-BRL-Yearly\\\",\\\"Pro-Plan-BRL-Monthly\\\",\\\"Pro-Plan-INR-Yearly\\\",\\\"Pro-Plan-INR-Monthly\\\",\\\"Pro-Plan-USD-Yearly\\\",\\\"Pro-Plan-USD-Monthly\\\",\\\"Business-Plan-HKD-Yearly\\\",\\\"Business-Plan-HKD-Monthly\\\",\\\"Business-Plan-BRL-Yearly\\\",\\\"Business-Plan-BRL-Monthly\\\",\\\"Business-Plan-INR-Yearly\\\",\\\"Business-Plan-INR-Monthly\\\",\\\"Business-Plan-USD-Yearly\\\",\\\"Business-Plan-USD-Monthly\\\",\\\"Growth-Plan-HKD-Yearly\\\",\\\"Growth-Plan-HKD-Monthly\\\",\\\"Growth-Plan-BRL-Yearly\\\",\\\"Growth-Plan-BRL-Monthly\\\",\\\"Growth-Plan-INR-Yearly\\\",\\\"Growth-Plan-INR-Monthly\\\",\\\"Growth-Plan-USD-Yearly\\\",\\\"Growth-Plan-USD-Monthly\\\",\\\"Enterprise---General-USD-Yearly\\\",\\\"Enterprise---General-USD-Monthly\\\",\\\"Professional-Plan-BRL-Yearly\\\",\\\"Professional-Plan-BRL-Monthly\\\",\\\"Standard-Plan-BRL-Yearly\\\",\\\"Standard-Plan-BRL-Monthly\\\",\\\"WA-API-Gateway-USD-Yearly\\\",\\\"BV-paused---0-HKD-Monthly\\\",\\\"BV-paused---0-INR-Monthly\\\",\\\"BV-paused---0-USD-Monthly\\\",\\\"Standard-Plan-INR-Yearly\\\",\\\"Standard-Plan-INR-Monthly\\\",\\\"Professional-Plan-INR-Yearly\\\",\\\"Professional-Plan-INR-Monthly\\\",\\\"Developer-Plan-HKD-Yearly\\\",\\\"Developer-Plan-HKD-Monthly\\\",\\\"Professional-Plan-HKD-Yearly\\\",\\\"Professional-Plan-HKD-Monthly\\\",\\\"Standard-Plan-HKD-Yearly\\\",\\\"Standard-Plan-HKD-Monthly\\\",\\\"Professional-Plan-India-INR-Yearly\\\",\\\"Professional-Plan-India-INR-Monthly\\\",\\\"Standard-Plan-India-INR-Yearly\\\",\\\"Standard-Plan-India-INR-Monthly\\\",\\\"Developer-Plan-India-INR-Yearly\\\",\\\"Developer-Plan-India-INR-Monthly\\\",\\\"WA-API-Gateway-USD-Monthly\\\",\\\"Developer-Plan-Indonesia-USD-Yearly\\\",\\\"Developer-Plan-Indonesia-USD-Monthly\\\",\\\"Professional-Plan-Indonesia-USD-Yearly\\\",\\\"Professional-Plan-Indonesia-USD-Monthly\\\",\\\"Standard-Plan-Indonesia-USD-Yearly\\\",\\\"Standard-Plan-Indonesia-USD-Monthly\\\",\\\"Developer-Plan-Brazil-USD-Yearly\\\",\\\"Developer-Plan-Brazil-USD-Monthly\\\",\\\"Professional-Plan-Brazil-USD-Yearly\\\",\\\"Professional-Plan-Brazil-USD-Monthly\\\",\\\"Standard-Plan-Brazil-USD-Yearly\\\",\\\"Standard-Plan-Brazil-USD-Monthly\\\",\\\"Developer-Plan-India-USD-Yearly\\\",\\\"Developer-Plan-India-USD-Monthly\\\",\\\"Professional-Plan-India-USD-Yearly\\\",\\\"Professional-Plan-India-USD-Monthly\\\",\\\"Standard-Plan-India-USD-Yearly\\\",\\\"Standard-Plan-India-USD-Monthly\\\",\\\"Developer-Plan-USD-Yearly\\\",\\\"Developer-Plan-USD-Monthly\\\",\\\"Professional-Plan-USD-Yearly\\\",\\\"Professional-Plan-USD-Monthly\\\",\\\"Standard-Plan-USD-Yearly\\\",\\\"Standard-Plan-USD-Monthly\\\"]},\\\"rule_id\\\":\\\"ZLtvnjYb0k0xZ9nUEgvRD:100.00:1\\\",\\\"group\\\":\\\"ZLtvnjYb0k0xZ9nUEgvRD:100.00:1\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3351656030\\\":{\\\"name\\\":\\\"3351656030\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"5ZPVDrfXIYjYvATjBSXVM5-CunoyRQaW7rLuFov3xHPJS\\\",\\\"group\\\":\\\"5ZPVDrfXIYjYvATjBSXVM5-CunoyRQaW7rLuFov3xHPJS\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3389876171\\\":{\\\"name\\\":\\\"3389876171\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3879789560\\\":{\\\"name\\\":\\\"3879789560\\\",\\\"value\\\":{\\\"scheduleIntervalHours\\\":24,\\\"scheduleV1Enabled\\\":true,\\\"engagementMetricsDailyWriteMode\\\":3,\\\"isDataFromBQ\\\":true},\\\"rule_id\\\":\\\"5O27fy8SkidWXhaUPvcevT:100.00:1\\\",\\\"group\\\":\\\"5O27fy8SkidWXhaUPvcevT:100.00:1\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4129906326\\\":{\\\"name\\\":\\\"4129906326\\\",\\\"value\\\":{\\\"link\\\":{\\\"Growth-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-W.pdf\\\",\\\"Growth-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-L.pdf\\\",\\\"Growth-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-E.pdf\\\",\\\"Growth-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-M.pdf\\\",\\\"Growth-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-G.pdf\\\",\\\"Growth-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-I.pdf\\\",\\\"Growth-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Growth-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Pro-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-W.pdf\\\",\\\"Pro-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-L.pdf\\\",\\\"Pro-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-E.pdf\\\",\\\"Pro-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-M.pdf\\\",\\\"Pro-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-G.pdf\\\",\\\"Pro-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-I.pdf\\\",\\\"Pro-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Pro-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Enterprise-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Enterprise-Plan-INR-I.pdf\\\",\\\"Enterprise-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Enterprise-Plan-INR-I.pdf\\\",\\\"Business-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-W.pdf\\\",\\\"Business-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-L.pdf\\\",\\\"Business-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-E.pdf\\\",\\\"Business-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-M.pdf\\\",\\\"Business-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-G.pdf\\\",\\\"Business-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-I.pdf\\\",\\\"Business-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-INR-I.pdf\\\",\\\"Business-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-INR-I.pdf\\\",\\\"Flexi-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-USD-I.pdf\\\",\\\"Flexi-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-INR-I.pdf\\\",\\\"Flexi-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-USD-I.pdf\\\",\\\"Flexi-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-INR-I.pdf\\\",\\\"Lite-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Lite-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Lite-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Lite-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Lite-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Lite-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Lite-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Lite-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Standard-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Standard-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Standard-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Standard-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Standard-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Standard-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Standard-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Standard-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Professional-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Professional-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Professional-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Professional-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Professional-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Professional-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Professional-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Professional-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Enterprise-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Enterprise-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Enterprise-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Enterprise-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Enterprise-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Enterprise-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Enterprise-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Enterprise-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\"}},\\\"rule_id\\\":\\\"4KViahiIJytWLfTZoF5H2c:100.00:2\\\",\\\"group\\\":\\\"4KViahiIJytWLfTZoF5H2c:100.00:2\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4168958031\\\":{\\\"name\\\":\\\"4168958031\\\",\\\"value\\\":{\\\"number-of-buttons\\\":2},\\\"rule_id\\\":\\\"launchedGroup\\\",\\\"group\\\":\\\"launchedGroup\\\",\\\"group_name\\\":\\\"Control\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]}},\\\"layer_configs\\\":{},\\\"sdkParams\\\":{},\\\"has_updates\\\":true,\\\"generator\\\":\\\"scrapi-nest\\\",\\\"time\\\":1761748041336,\\\"company_lcut\\\":1761748041336,\\\"evaluated_keys\\\":{\\\"userID\\\":\\\"15bc764552878e4045e167dabc88a595\\\",\\\"stableID\\\":\\\"497c51b6-fc99-4530-9dc3-a4ad1a23caaf\\\"},\\\"hash_used\\\":\\\"djb2\\\",\\\"derived_fields\\\":{\\\"ip\\\":\\\"49.43.32.169\\\",\\\"country\\\":\\\"IN\\\",\\\"browserName\\\":\\\"Chrome\\\",\\\"browserVersion\\\":\\\"141.0.0\\\",\\\"osName\\\":\\\"Windows\\\",\\\"osVersion\\\":\\\"10.0.0\\\",\\\"browser_name\\\":\\\"Chrome\\\",\\\"browser_version\\\":\\\"141.0.0\\\",\\\"os_name\\\":\\\"Windows\\\",\\\"os_version\\\":\\\"10.0.0\\\"},\\\"hashed_sdk_key_used\\\":\\\"3368523838\\\",\\\"can_record_session\\\":true,\\\"recording_blocked\\\":false,\\\"session_recording_rate\\\":1,\\\"auto_capture_settings\\\":{\\\"disabled_events\\\":{}}}\",\"receivedAt\":1761751629979,\"stableID\":\"497c51b6-fc99-4530-9dc3-a4ad1a23caaf\",\"fullUserHash\":\"533040396\"}"
        },
        {
          "name": "g2tracking",
          "value": "{\"20250929\":[\",Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/141.0.0.0Safari/537.36,1280x720,en-US,-330,1023407,,\"]}"
        },
        {
          "name": "statsig.cached.evaluations.4010869046",
          "value": "{\"source\":\"Network\",\"data\":\"{\\\"feature_gates\\\":{\\\"3556498\\\":{\\\"name\\\":\\\"3556498\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4QxAtYhh98CEwN9qaUVMBO\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3690731\\\":{\\\"name\\\":\\\"3690731\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3m9pxrG88h6NycHb87dlmj:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"19047894\\\":{\\\"name\\\":\\\"19047894\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2wjPFdrMaU7qtS4crBnDBN:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"24118183\\\":{\\\"name\\\":\\\"24118183\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Fdu4GRzg83EHqU1vvf2Ab:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"29873538\\\":{\\\"name\\\":\\\"29873538\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2NR7myiK0q8QK7pn4PevxP:100.00:11\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"35912392\\\":{\\\"name\\\":\\\"35912392\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"36309801\\\":{\\\"name\\\":\\\"36309801\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1Ms76z5gIXs2PWqKWuIxoj:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"56825500\\\":{\\\"name\\\":\\\"56825500\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"65385529\\\":{\\\"name\\\":\\\"65385529\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"117744020\\\":{\\\"name\\\":\\\"117744020\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"134943526\\\":{\\\"name\\\":\\\"134943526\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3PbrYF0EO3o9O3uEYLXADv:0.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"137429910\\\":{\\\"name\\\":\\\"137429910\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"151951309\\\":{\\\"name\\\":\\\"151951309\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"176189447\\\":{\\\"name\\\":\\\"176189447\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2jyC65bRjuI3FHQqJHG01J:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"192226381\\\":{\\\"name\\\":\\\"192226381\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"44lHOgtXF4TtxCw8hrYtQv:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"213795005\\\":{\\\"name\\\":\\\"213795005\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"237057907\\\":{\\\"name\\\":\\\"237057907\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"frFbSWQXoGvd93MFKPomj\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"250944335\\\":{\\\"name\\\":\\\"250944335\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"257859813\\\":{\\\"name\\\":\\\"257859813\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"276988480\\\":{\\\"name\\\":\\\"276988480\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"284158622\\\":{\\\"name\\\":\\\"284158622\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"291856187\\\":{\\\"name\\\":\\\"291856187\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"330054939\\\":{\\\"name\\\":\\\"330054939\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4K1XOPZyLEDHXddCcbXK0t\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"338390626\\\":{\\\"name\\\":\\\"338390626\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3YlR6wlomAcWeKeYa4OOgp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"341488802\\\":{\\\"name\\\":\\\"341488802\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3El8Il7Wkgkwbempfcjy1c:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"342433810\\\":{\\\"name\\\":\\\"342433810\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"346372535\\\":{\\\"name\\\":\\\"346372535\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3irkhfT3OLvIVlk2Ks5jxW:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"354295315\\\":{\\\"name\\\":\\\"354295315\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"370982552\\\":{\\\"name\\\":\\\"370982552\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"387795292\\\":{\\\"name\\\":\\\"387795292\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ykgj4HSe2nyq6qNOmHBWP:0.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"397098067\\\":{\\\"name\\\":\\\"397098067\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1RIDJHI2dx6jXk7iKPvLQt:0.00:9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"448919431\\\":{\\\"name\\\":\\\"448919431\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"471803185\\\":{\\\"name\\\":\\\"471803185\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"489203531\\\":{\\\"name\\\":\\\"489203531\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2rBgJwGK0Jq5ByVr4n6d0v:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"549937556\\\":{\\\"name\\\":\\\"549937556\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"556096570\\\":{\\\"name\\\":\\\"556096570\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"569576755\\\":{\\\"name\\\":\\\"569576755\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"586990305\\\":{\\\"name\\\":\\\"586990305\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"594541863\\\":{\\\"name\\\":\\\"594541863\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7f9mzIJLrstdBQwbEADfuG:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"619413141\\\":{\\\"name\\\":\\\"619413141\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1xqICj0w1e3oNwlXaSM60Z:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"646508337\\\":{\\\"name\\\":\\\"646508337\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2nkJ2RERJeHQYdDO1qMB9B:100.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"662641987\\\":{\\\"name\\\":\\\"662641987\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4UBQHuB5cpfiJ6IPohCZRf:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"670288179\\\":{\\\"name\\\":\\\"670288179\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"753150926\\\":{\\\"name\\\":\\\"753150926\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3V5bWjOaeUNBFIKyTQtO2b\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"796473002\\\":{\\\"name\\\":\\\"796473002\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"803274003\\\":{\\\"name\\\":\\\"803274003\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"805204947\\\":{\\\"name\\\":\\\"805204947\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"820312485\\\":{\\\"name\\\":\\\"820312485\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"821183823\\\":{\\\"name\\\":\\\"821183823\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"825413842\\\":{\\\"name\\\":\\\"825413842\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"853733906\\\":{\\\"name\\\":\\\"853733906\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"864205161\\\":{\\\"name\\\":\\\"864205161\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"snV6cM0pQy8Vdr6KxXSr5:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"874254006\\\":{\\\"name\\\":\\\"874254006\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"883485656\\\":{\\\"name\\\":\\\"883485656\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"898248959\\\":{\\\"name\\\":\\\"898248959\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"904719398\\\":{\\\"name\\\":\\\"904719398\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"923541420\\\":{\\\"name\\\":\\\"923541420\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"926323500\\\":{\\\"name\\\":\\\"926323500\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"931446997\\\":{\\\"name\\\":\\\"931446997\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"949752030\\\":{\\\"name\\\":\\\"949752030\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"952116887\\\":{\\\"name\\\":\\\"952116887\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"955008015\\\":{\\\"name\\\":\\\"955008015\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7zDPHF9SQ4CkgOWE2pUqGc:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"981305169\\\":{\\\"name\\\":\\\"981305169\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"997192322\\\":{\\\"name\\\":\\\"997192322\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7HWYnF5KFwJUSMaUoJJJUW:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1021178329\\\":{\\\"name\\\":\\\"1021178329\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1029736013\\\":{\\\"name\\\":\\\"1029736013\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1037676453\\\":{\\\"name\\\":\\\"1037676453\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1ok2QE9y5vjuJIbDSlMIQ2:0.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1062775714\\\":{\\\"name\\\":\\\"1062775714\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1070934160\\\":{\\\"name\\\":\\\"1070934160\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"qC5sNXInPvgR6w7XrvyWQ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1085020658\\\":{\\\"name\\\":\\\"1085020658\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1103331817\\\":{\\\"name\\\":\\\"1103331817\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1108276615\\\":{\\\"name\\\":\\\"1108276615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1119588136\\\":{\\\"name\\\":\\\"1119588136\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1120956135\\\":{\\\"name\\\":\\\"1120956135\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4I27WOJBiPIMoNkKSGbK52:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1176684932\\\":{\\\"name\\\":\\\"1176684932\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1204453427\\\":{\\\"name\\\":\\\"1204453427\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3KD2OHAXsNbrQP5Vm3DdVm\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1205795392\\\":{\\\"name\\\":\\\"1205795392\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1217919578\\\":{\\\"name\\\":\\\"1217919578\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1235342138\\\":{\\\"name\\\":\\\"1235342138\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4A3rsJZD9kQ6zmbb4qk7cC:100.00:6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1237411615\\\":{\\\"name\\\":\\\"1237411615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"K05Ct90CVKv6G0pMV3cfr:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1246796578\\\":{\\\"name\\\":\\\"1246796578\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3KL6C3vNGacF1M2FmITMCU:100.00:12\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1258581238\\\":{\\\"name\\\":\\\"1258581238\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"CO6B3EGu0BmKdTpgWnaoG:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1272450172\\\":{\\\"name\\\":\\\"1272450172\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ghEJv4Qt4UlUB3tJFxeyJ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1319726583\\\":{\\\"name\\\":\\\"1319726583\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1347676252\\\":{\\\"name\\\":\\\"1347676252\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1389735471\\\":{\\\"name\\\":\\\"1389735471\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4Vih3jQcufZPYsZnPTAfIp:0.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1398813458\\\":{\\\"name\\\":\\\"1398813458\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3atcKMrHOHa4PXJF3Dfhel:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1417562847\\\":{\\\"name\\\":\\\"1417562847\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1420189732\\\":{\\\"name\\\":\\\"1420189732\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1442403526\\\":{\\\"name\\\":\\\"1442403526\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7peUzjkYeOFgp2mRfXbzih:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1448588679\\\":{\\\"name\\\":\\\"1448588679\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5W1Kc8G6GGT3ktlUmqgRV5:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1468072136\\\":{\\\"name\\\":\\\"1468072136\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2XairiP46gB0I63k5tNP5B\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1472468720\\\":{\\\"name\\\":\\\"1472468720\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1474535541\\\":{\\\"name\\\":\\\"1474535541\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1494595529\\\":{\\\"name\\\":\\\"1494595529\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"22iywJe8Qz5WI0dhYYuKFt:100.00:5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1495765263\\\":{\\\"name\\\":\\\"1495765263\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1vlIg8rrHas7k2Mcw8IeDM:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1506699038\\\":{\\\"name\\\":\\\"1506699038\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1535466856\\\":{\\\"name\\\":\\\"1535466856\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"1548368528\\\":{\\\"name\\\":\\\"1548368528\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1556961638\\\":{\\\"name\\\":\\\"1556961638\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1556962082\\\":{\\\"name\\\":\\\"1556962082\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1561594747\\\":{\\\"name\\\":\\\"1561594747\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1562372427\\\":{\\\"name\\\":\\\"1562372427\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1568030702\\\":{\\\"name\\\":\\\"1568030702\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1578064793\\\":{\\\"name\\\":\\\"1578064793\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1626539492\\\":{\\\"name\\\":\\\"1626539492\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Bbd1GvsyMJwZzi1WKpEcp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1660837176\\\":{\\\"name\\\":\\\"1660837176\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3pKuvniNGzHQdKs9EDzlG2:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1676271509\\\":{\\\"name\\\":\\\"1676271509\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1708913788\\\":{\\\"name\\\":\\\"1708913788\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6cugV7tpqu5LewxpOQ4ipb:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1773058922\\\":{\\\"name\\\":\\\"1773058922\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4Ix7l4IWyemZPlAsj6YT7n\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1812806533\\\":{\\\"name\\\":\\\"1812806533\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"34OumqQVT3dSMvQIJzE2Oh\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1829974633\\\":{\\\"name\\\":\\\"1829974633\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1854107166\\\":{\\\"name\\\":\\\"1854107166\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1868168216\\\":{\\\"name\\\":\\\"1868168216\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1884412781\\\":{\\\"name\\\":\\\"1884412781\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1886644922\\\":{\\\"name\\\":\\\"1886644922\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1895315665\\\":{\\\"name\\\":\\\"1895315665\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1906469985\\\":{\\\"name\\\":\\\"1906469985\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1914340998\\\":{\\\"name\\\":\\\"1914340998\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1919743132\\\":{\\\"name\\\":\\\"1919743132\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3YmZaHNTUy2v0E7vOVgqnV:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1927985405\\\":{\\\"name\\\":\\\"1927985405\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1935132290\\\":{\\\"name\\\":\\\"1935132290\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1938431766\\\":{\\\"name\\\":\\\"1938431766\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1PpEh51QekOg48dIyy0EhS:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1947021730\\\":{\\\"name\\\":\\\"1947021730\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1967442834\\\":{\\\"name\\\":\\\"1967442834\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5cJjL9m5KKGxxuvmba9b7m\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1994770822\\\":{\\\"name\\\":\\\"1994770822\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2004573773\\\":{\\\"name\\\":\\\"2004573773\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2034771199\\\":{\\\"name\\\":\\\"2034771199\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7kvuwiskCBVu90bHHeiO73\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2050862886\\\":{\\\"name\\\":\\\"2050862886\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2077485919\\\":{\\\"name\\\":\\\"2077485919\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2089382773\\\":{\\\"name\\\":\\\"2089382773\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6HzltDPRzvdzEPBEpEgtGX:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2090111152\\\":{\\\"name\\\":\\\"2090111152\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2bwNHNbaVSviQLaFSnx507:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2102055349\\\":{\\\"name\\\":\\\"2102055349\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2105601866\\\":{\\\"name\\\":\\\"2105601866\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2118537617\\\":{\\\"name\\\":\\\"2118537617\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3o8X3FGwxrPeg1oNE2H51g\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2139079692\\\":{\\\"name\\\":\\\"2139079692\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2148008700\\\":{\\\"name\\\":\\\"2148008700\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7dWLGe4ucjPtAT5TOuXHLb\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2160693005\\\":{\\\"name\\\":\\\"2160693005\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2179063667\\\":{\\\"name\\\":\\\"2179063667\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2FAzrpzaTbXFGxkuNi68gs\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2180353316\\\":{\\\"name\\\":\\\"2180353316\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4ZuSFJNqAw7KVdvr9MAyGL\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2182141949\\\":{\\\"name\\\":\\\"2182141949\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2189106183\\\":{\\\"name\\\":\\\"2189106183\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2211880815\\\":{\\\"name\\\":\\\"2211880815\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3ojeS7gcAbYoOk2GpTyybv:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2241558617\\\":{\\\"name\\\":\\\"2241558617\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"48NYlf9Gl9BHiUahXyYjBh:100.00:5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2263396675\\\":{\\\"name\\\":\\\"2263396675\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2263963260\\\":{\\\"name\\\":\\\"2263963260\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2297330149\\\":{\\\"name\\\":\\\"2297330149\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3fI9Mfd26G1Ie2DkX8SCkl\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2304477102\\\":{\\\"name\\\":\\\"2304477102\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5C6p2DDRZeEWKurvzT44hP:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2320160280\\\":{\\\"name\\\":\\\"2320160280\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7z8FWDSuRGijet8IvuNRzk:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2328991501\\\":{\\\"name\\\":\\\"2328991501\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2335627606\\\":{\\\"name\\\":\\\"2335627606\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4AqN4yVPWVAiJbp82VnWad:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2336798793\\\":{\\\"name\\\":\\\"2336798793\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5gSZHjvtlA1BfCvex6dDOR:100.00:80\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2338023897\\\":{\\\"name\\\":\\\"2338023897\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1MHJbJuhF20wKWtTVu13RV\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2349827811\\\":{\\\"name\\\":\\\"2349827811\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2353314921\\\":{\\\"name\\\":\\\"2353314921\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2362591192\\\":{\\\"name\\\":\\\"2362591192\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2442533097\\\":{\\\"name\\\":\\\"2442533097\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2444721653\\\":{\\\"name\\\":\\\"2444721653\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5PltwB1eF9UmeIRaULNl6p:100.00:22\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2458303051\\\":{\\\"name\\\":\\\"2458303051\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2459650299\\\":{\\\"name\\\":\\\"2459650299\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"32vEIEcCor82a5Koga9Avp\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489235331\\\":{\\\"name\\\":\\\"2489235331\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489452866\\\":{\\\"name\\\":\\\"2489452866\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4jqWTV1DB0NzsHhlKy0mvg:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[{\\\"gate\\\":\\\"nrF4jgDvhZQwSWreFpseRLLbdgZG3CqNgVICBnuW1id\\\",\\\"gateValue\\\":\\\"true\\\",\\\"ruleID\\\":\\\"6cugV7tpqu5LewxpOQ4ipb:100.00:8\\\"}]},\\\"2496433416\\\":{\\\"name\\\":\\\"2496433416\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4tq2GNsD9ffR0ZgqlzrLBG\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2502667786\\\":{\\\"name\\\":\\\"2502667786\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1K1HvRqu38SBPWcab6U9y8:0.00:7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2506326034\\\":{\\\"name\\\":\\\"2506326034\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2527521448\\\":{\\\"name\\\":\\\"2527521448\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2C3gETnlz62XUeHmjBeGDJ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2528449374\\\":{\\\"name\\\":\\\"2528449374\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3kTttiGlGQmtUJNC5Lce3W\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2529475342\\\":{\\\"name\\\":\\\"2529475342\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2540052713\\\":{\\\"name\\\":\\\"2540052713\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6j3Bd5pO6BxQG8QvTtuPJh\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2544337905\\\":{\\\"name\\\":\\\"2544337905\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5FmuLtr57GyxoPs8ixvJF7:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2565877796\\\":{\\\"name\\\":\\\"2565877796\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"SiLWvEUWpPDGSRik4Eq65:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2568255691\\\":{\\\"name\\\":\\\"2568255691\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1O5qOMGxClQAnbbWUqXUqX\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2656813585\\\":{\\\"name\\\":\\\"2656813585\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"q5IO7PaiBvNJ1xLRULsd5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2667240513\\\":{\\\"name\\\":\\\"2667240513\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2678683376\\\":{\\\"name\\\":\\\"2678683376\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3ietdPLnmNOMINVXohy4gv\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2706537359\\\":{\\\"name\\\":\\\"2706537359\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2716921513\\\":{\\\"name\\\":\\\"2716921513\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2738213561\\\":{\\\"name\\\":\\\"2738213561\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2760099186\\\":{\\\"name\\\":\\\"2760099186\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3xD0LTPHYvmbCm8UB665l0:100.00:10\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2774466021\\\":{\\\"name\\\":\\\"2774466021\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2791203086\\\":{\\\"name\\\":\\\"2791203086\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2797658677\\\":{\\\"name\\\":\\\"2797658677\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2799938645\\\":{\\\"name\\\":\\\"2799938645\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"ImkACYRhVeMhDLzUMI4hF\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2800814367\\\":{\\\"name\\\":\\\"2800814367\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2LoicVadZlYnH9kwaI6XAV\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2812329042\\\":{\\\"name\\\":\\\"2812329042\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2836004458\\\":{\\\"name\\\":\\\"2836004458\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"l1LPn2F0idXpS5Mvjyo2c\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2857545436\\\":{\\\"name\\\":\\\"2857545436\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2865622437\\\":{\\\"name\\\":\\\"2865622437\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2887036538\\\":{\\\"name\\\":\\\"2887036538\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2903204993\\\":{\\\"name\\\":\\\"2903204993\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2903855436\\\":{\\\"name\\\":\\\"2903855436\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"23h9cSkXIwWPb9icf98AlN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2923228060\\\":{\\\"name\\\":\\\"2923228060\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4oAzfSaLJS75pKMPxuwd2w:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2944538919\\\":{\\\"name\\\":\\\"2944538919\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3jCuzilPPBXsSsDIP0pfDs:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2954467846\\\":{\\\"name\\\":\\\"2954467846\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2955801362\\\":{\\\"name\\\":\\\"2955801362\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"EpkfArs8xqCIxEWeYzIi3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2963199434\\\":{\\\"name\\\":\\\"2963199434\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4IdDkqYOvftwWOfFFVdYsn\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2990421729\\\":{\\\"name\\\":\\\"2990421729\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3085682210\\\":{\\\"name\\\":\\\"3085682210\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3141309457\\\":{\\\"name\\\":\\\"3141309457\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3144147760\\\":{\\\"name\\\":\\\"3144147760\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3174538403\\\":{\\\"name\\\":\\\"3174538403\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3191221983\\\":{\\\"name\\\":\\\"3191221983\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3194979216\\\":{\\\"name\\\":\\\"3194979216\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3215096882\\\":{\\\"name\\\":\\\"3215096882\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"3221432098\\\":{\\\"name\\\":\\\"3221432098\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4NrF0VljZ6Usu4DSwupLGP\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3244486900\\\":{\\\"name\\\":\\\"3244486900\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3250220129\\\":{\\\"name\\\":\\\"3250220129\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"PpKjd6sAB17aMbc5c4X1H:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3250418731\\\":{\\\"name\\\":\\\"3250418731\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3273802703\\\":{\\\"name\\\":\\\"3273802703\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"78CdH73U2fdTwW33YzxVzE\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3286753640\\\":{\\\"name\\\":\\\"3286753640\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3292969639\\\":{\\\"name\\\":\\\"3292969639\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3298704730\\\":{\\\"name\\\":\\\"3298704730\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2hvJFWwLqAZ3kDABskH9eX:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3301231973\\\":{\\\"name\\\":\\\"3301231973\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3325445310\\\":{\\\"name\\\":\\\"3325445310\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3330616214\\\":{\\\"name\\\":\\\"3330616214\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"Y5eZ0Y1Yz7316MMcDP4Vk:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3347230130\\\":{\\\"name\\\":\\\"3347230130\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"5OZNX9vmjUkm8L2uNqiE0Y\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3357819914\\\":{\\\"name\\\":\\\"3357819914\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7iAZ39zj8sabQTtTRGwNqv:100.00:3\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3358625901\\\":{\\\"name\\\":\\\"3358625901\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3373495869\\\":{\\\"name\\\":\\\"3373495869\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4s1SRFHxk70rmXXEyCR7GE:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3409438888\\\":{\\\"name\\\":\\\"3409438888\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3M5ghQBOpYABxdGEXMXRHF\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3456074481\\\":{\\\"name\\\":\\\"3456074481\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6itxdXWr8kMAhXcH63vdjP:0.00:18\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3476679401\\\":{\\\"name\\\":\\\"3476679401\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3481625769\\\":{\\\"name\\\":\\\"3481625769\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2GMXoP8uI1wvGbAdZAK8bH\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3495695983\\\":{\\\"name\\\":\\\"3495695983\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3509124063\\\":{\\\"name\\\":\\\"3509124063\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3517453746\\\":{\\\"name\\\":\\\"3517453746\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3NZ62QpiIpAMQ2zziuX68h:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3529694804\\\":{\\\"name\\\":\\\"3529694804\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3s98XbQC3LhAbEdNGAn9LB:50.00:13\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3535936328\\\":{\\\"name\\\":\\\"3535936328\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"NwgJZZjSjpyHcw2Q1FDgf\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3538762292\\\":{\\\"name\\\":\\\"3538762292\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3TZYAkDStPgw1xTQpExhY1:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3571117319\\\":{\\\"name\\\":\\\"3571117319\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3585785973\\\":{\\\"name\\\":\\\"3585785973\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2UjFM6N90ICj6rykms968t:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3587105173\\\":{\\\"name\\\":\\\"3587105173\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"45V8cm3Jl76aiv9lVtGM7J\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3591679915\\\":{\\\"name\\\":\\\"3591679915\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4532ELB7rjScS8ZqRXmPmO:100.00:5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3599883158\\\":{\\\"name\\\":\\\"3599883158\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7iAjw9P7uYC2l6D5P4UZEM\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3602404150\\\":{\\\"name\\\":\\\"3602404150\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3604760265\\\":{\\\"name\\\":\\\"3604760265\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4jVDxRRd2rzAP5l0FREm6S:100.00:4\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3608765262\\\":{\\\"name\\\":\\\"3608765262\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4o9cvDPQtVxEMtB67pEYYW\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3612827893\\\":{\\\"name\\\":\\\"3612827893\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6WQhvCIO0WCXKPlaqF13tg:100.00:12\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3625418394\\\":{\\\"name\\\":\\\"3625418394\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3629211338\\\":{\\\"name\\\":\\\"3629211338\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3632185250\\\":{\\\"name\\\":\\\"3632185250\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"uS5SdmfBaK2UINQGhNko6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3638300699\\\":{\\\"name\\\":\\\"3638300699\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3642739548\\\":{\\\"name\\\":\\\"3642739548\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5PMQTNwFCZtBR7arZFXCuo\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3649526019\\\":{\\\"name\\\":\\\"3649526019\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2pAlIJIGb0OqUokTDq8HAx\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3658435963\\\":{\\\"name\\\":\\\"3658435963\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1D7nVkdssnG5AY9evN1IO3:100.00:8\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3681005650\\\":{\\\"name\\\":\\\"3681005650\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"7mbYvE2g0nrLIXGQbAynFl:100.00:6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3683570479\\\":{\\\"name\\\":\\\"3683570479\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3718850965\\\":{\\\"name\\\":\\\"3718850965\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3719413687\\\":{\\\"name\\\":\\\"3719413687\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3727136946\\\":{\\\"name\\\":\\\"3727136946\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5IUo9ADyMD9EKrr63slviL\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3728973660\\\":{\\\"name\\\":\\\"3728973660\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"786GedWy6ajgR3EGw4VLw7\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3748838155\\\":{\\\"name\\\":\\\"3748838155\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"J95e6o0gS7fanPV6fV0lW\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3758266271\\\":{\\\"name\\\":\\\"3758266271\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6xMf6EuU3SWw0vKNYeqlrh:100.00:17\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3767477981\\\":{\\\"name\\\":\\\"3767477981\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3773638854\\\":{\\\"name\\\":\\\"3773638854\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3WMQLcu2Q1HcmHrQlxffkN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3777622887\\\":{\\\"name\\\":\\\"3777622887\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3790246742\\\":{\\\"name\\\":\\\"3790246742\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3806631862\\\":{\\\"name\\\":\\\"3806631862\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4IZ7QR6jvfsc82IuNWhEsN\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3835808111\\\":{\\\"name\\\":\\\"3835808111\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"V3iw7NppykR043EDPBZvX:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3855301715\\\":{\\\"name\\\":\\\"3855301715\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3865786566\\\":{\\\"name\\\":\\\"3865786566\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"OqzXi9P1TeMv8enCRUMUA:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3907001491\\\":{\\\"name\\\":\\\"3907001491\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3EEdphI6jfFhX7c97DvO1W\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3914744596\\\":{\\\"name\\\":\\\"3914744596\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6qH1qw9MBu9iHQG29RJUdE\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3931859276\\\":{\\\"name\\\":\\\"3931859276\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3935694520\\\":{\\\"name\\\":\\\"3935694520\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3955684342\\\":{\\\"name\\\":\\\"3955684342\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3961057518\\\":{\\\"name\\\":\\\"3961057518\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3966685453\\\":{\\\"name\\\":\\\"3966685453\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6mhJ7BBZUVJjMnvVxH3ahm\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3972294244\\\":{\\\"name\\\":\\\"3972294244\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3994938899\\\":{\\\"name\\\":\\\"3994938899\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"2vZCfOQjlzPr0EBS5vTpdH\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4021931638\\\":{\\\"name\\\":\\\"4021931638\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"3TxtYp2fwEis1mA7EuvHeI:100.00:2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4037209004\\\":{\\\"name\\\":\\\"4037209004\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6Ra6YSHijhn1R5gH0o5bI9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4059817396\\\":{\\\"name\\\":\\\"4059817396\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4062690877\\\":{\\\"name\\\":\\\"4062690877\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4062693929\\\":{\\\"name\\\":\\\"4062693929\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"6Ra54abnvVkFDRwXgkDgV:0.00:11\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4075833615\\\":{\\\"name\\\":\\\"4075833615\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"disabled\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4094412970\\\":{\\\"name\\\":\\\"4094412970\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"36WTwY8EiKrpGwjoclZPav\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4108510704\\\":{\\\"name\\\":\\\"4108510704\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"4SU6X72OoW2fCiWHWGTUT6\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4109649425\\\":{\\\"name\\\":\\\"4109649425\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"2PY3f69gocNhMWsZfiZrjS:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4118986142\\\":{\\\"name\\\":\\\"4118986142\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4122069007\\\":{\\\"name\\\":\\\"4122069007\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"6mGKkyDXisCuTi1rq1eUYq\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4132708234\\\":{\\\"name\\\":\\\"4132708234\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"7p8TcgU7jsU5eESu7js6A9\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4134345213\\\":{\\\"name\\\":\\\"4134345213\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"37g39BBKM4jBXy3R5JWUll\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4164590530\\\":{\\\"name\\\":\\\"4164590530\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4166169096\\\":{\\\"name\\\":\\\"4166169096\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"60f2yAtZCtZTk7AUNIOLi2\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4194040058\\\":{\\\"name\\\":\\\"4194040058\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4196421268\\\":{\\\"name\\\":\\\"4196421268\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4198030330\\\":{\\\"name\\\":\\\"4198030330\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"4q9eW8Kk4PrfUIXTHwUA9i:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4198063952\\\":{\\\"name\\\":\\\"4198063952\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"3dslib2UsBksPhClaLfXbu:0.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4219963017\\\":{\\\"name\\\":\\\"4219963017\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"UkJpCvtZh3ZNc253R5xej\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4230211647\\\":{\\\"name\\\":\\\"4230211647\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5HJT0KNtzBysTJJIwN93Ur:100.00:1\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4245238253\\\":{\\\"name\\\":\\\"4245238253\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"5K3Ss6ACkacjo5u0fVuiH5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4249130196\\\":{\\\"name\\\":\\\"4249130196\\\",\\\"value\\\":true,\\\"rule_id\\\":\\\"1GylpY0kJLasbUv583LqHZ\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4255107497\\\":{\\\"name\\\":\\\"4255107497\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"default\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4272153326\\\":{\\\"name\\\":\\\"4272153326\\\",\\\"value\\\":false,\\\"rule_id\\\":\\\"1oFlTGVYDYsnuCd0v606x5\\\",\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]}},\\\"dynamic_configs\\\":{\\\"198152316\\\":{\\\"name\\\":\\\"198152316\\\",\\\"value\\\":{\\\"thresholdDay\\\":14},\\\"rule_id\\\":\\\"4ZGogckXokCfUxqiaLH5ve\\\",\\\"group\\\":\\\"4ZGogckXokCfUxqiaLH5ve\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"201017248\\\":{\\\"name\\\":\\\"201017248\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"739965369\\\":{\\\"name\\\":\\\"739965369\\\",\\\"value\\\":{\\\"thresholdMessageCount\\\":1,\\\"mmapiRoutingRatio\\\":0},\\\"rule_id\\\":\\\"TAvwErnTk3Rmdf1mnhVBq\\\",\\\"group\\\":\\\"TAvwErnTk3Rmdf1mnhVBq\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1119399031\\\":{\\\"name\\\":\\\"1119399031\\\",\\\"value\\\":{\\\"connect_number\\\":\\\"\\\"},\\\"rule_id\\\":\\\"launchedGroup\\\",\\\"group\\\":\\\"launchedGroup\\\",\\\"group_name\\\":\\\"Test\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1127325973\\\":{\\\"name\\\":\\\"1127325973\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1140243592\\\":{\\\"name\\\":\\\"1140243592\\\",\\\"value\\\":{\\\"displayPeriod\\\":7,\\\"displayPaths\\\":[\\\"/\\\"]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1228945520\\\":{\\\"name\\\":\\\"1228945520\\\",\\\"value\\\":{\\\"enabled_multiple_wa_numbers_plans\\\":[\\\"Business-Plan\\\",\\\"Enterprise-Plan\\\"]},\\\"rule_id\\\":\\\"6hEuwWunqvpIj8JEOmh7Pm:100.00:3-11WG70T4DuaMG7agsFn5Lc\\\",\\\"group\\\":\\\"6hEuwWunqvpIj8JEOmh7Pm:100.00:3-11WG70T4DuaMG7agsFn5Lc\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1252254248\\\":{\\\"name\\\":\\\"1252254248\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1657359845\\\":{\\\"name\\\":\\\"1657359845\\\",\\\"value\\\":{\\\"segment_1\\\":{\\\"feature_settings\\\":[\\\"KnowBot\\\"],\\\"user_roles\\\":[\\\"ADMINISTRATOR\\\",\\\"AUTOMATION_MANAGER\\\",\\\"EXTERNAL_ADMINISTRATOR\\\"],\\\"number_of_knowbots\\\":{\\\"operator\\\":\\\"=\\\",\\\"value\\\":0}},\\\"segment_2\\\":{\\\"user_roles\\\":[\\\"ADMINISTRATOR\\\",\\\"AUTOMATION_MANAGER\\\",\\\"EXTERNAL_ADMINISTRATOR\\\"],\\\"knowbot_usage_by_months\\\":{\\\"month\\\":3,\\\"usage\\\":{\\\"operator\\\":\\\">\\\",\\\"value\\\":0}},\\\"number_of_knowbots\\\":{\\\"operator\\\":\\\">\\\",\\\"value\\\":0}}},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1772852090\\\":{\\\"name\\\":\\\"1772852090\\\",\\\"value\\\":{\\\"displayPeriod\\\":7},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"1867650129\\\":{\\\"name\\\":\\\"1867650129\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"1936679860\\\":{\\\"name\\\":\\\"1936679860\\\",\\\"value\\\":{\\\"plans\\\":[\\\"abc\\\"]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":true,\\\"passed\\\":false,\\\"id_type\\\":\\\"stableID\\\",\\\"secondary_exposures\\\":[]},\\\"1991952245\\\":{\\\"name\\\":\\\"1991952245\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"prestart\\\",\\\"group\\\":\\\"prestart\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]},\\\"2209800305\\\":{\\\"name\\\":\\\"2209800305\\\",\\\"value\\\":{\\\"TenantIDs\\\":[\\\"365443\\\",\\\"393307\\\"]},\\\"rule_id\\\":\\\"6HNnx6fwYnd7oY1nudAVoI:100.00:2\\\",\\\"group\\\":\\\"6HNnx6fwYnd7oY1nudAVoI:100.00:2\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2281530840\\\":{\\\"name\\\":\\\"2281530840\\\",\\\"value\\\":{\\\"business-year_business-month\\\":{\\\"isDowngrade\\\":true,\\\"needFeatureCheck\\\":false},\\\"standard-month_growth-month\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"standard-month_growth-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"standard-year_growth-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":false},\\\"pro-month_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":false},\\\"professional-month_pro-month\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"professional-month_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true},\\\"professional-year_pro-year\\\":{\\\"isDowngrade\\\":false,\\\"needFeatureCheck\\\":true}},\\\"rule_id\\\":\\\"3M2CT8wAkisnx4D34CqOkV:100.00:1-3M2CT6RxS0iTdF57tuvb1T\\\",\\\"group\\\":\\\"3M2CT8wAkisnx4D34CqOkV:100.00:1-3M2CT6RxS0iTdF57tuvb1T\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2294648607\\\":{\\\"name\\\":\\\"2294648607\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"WJ7xApZjbJEY5QQ2t2Hts:0.00:8\\\",\\\"group\\\":\\\"WJ7xApZjbJEY5QQ2t2Hts:0.00:8\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2489550326\\\":{\\\"name\\\":\\\"2489550326\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2517717277\\\":{\\\"name\\\":\\\"2517717277\\\",\\\"value\\\":{\\\"call_partners\\\":[]},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"2862204285\\\":{\\\"name\\\":\\\"2862204285\\\",\\\"value\\\":{\\\"advertisement_layout\\\":\\\"top\\\"},\\\"rule_id\\\":\\\"7GAy6NR6nLojhfmnHOFNu0\\\",\\\"group\\\":\\\"7GAy6NR6nLojhfmnHOFNu0\\\",\\\"group_name\\\":\\\"Control\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":true,\\\"is_user_in_experiment\\\":true,\\\"secondary_exposures\\\":[]},\\\"3025766574\\\":{\\\"name\\\":\\\"3025766574\\\",\\\"value\\\":{\\\"existing_plan_ids\\\":[\\\"Business-Plan-GBP-Yearly\\\",\\\"Business-Plan-GBP-Every-6-months\\\",\\\"Business-Plan-GBP-Every-3-months\\\",\\\"Business-Plan-GBP-Monthly\\\",\\\"Pro-Plan-GBP-Yearly\\\",\\\"Pro-Plan-GBP-Every-6-months\\\",\\\"Pro-Plan-GBP-Every-3-months\\\",\\\"Pro-Plan-GBP-Monthly\\\",\\\"Growth-Plan-GBP-Yearly\\\",\\\"Growth-Plan-GBP-Every-6-months\\\",\\\"Growth-Plan-GBP-Every-3-months\\\",\\\"Growth-Plan-GBP-Monthly\\\",\\\"Business-Plan-EUR-Yearly\\\",\\\"Business-Plan-EUR-Every-6-months\\\",\\\"Business-Plan-EUR-Every-3-months\\\",\\\"Business-Plan-EUR-Monthly\\\",\\\"Pro-Plan-EUR-Yearly\\\",\\\"Pro-Plan-EUR-Every-6-months\\\",\\\"Pro-Plan-EUR-Every-3-months\\\",\\\"Pro-Plan-EUR-Monthly\\\",\\\"Growth-Plan-EUR-Yearly\\\",\\\"Growth-Plan-EUR-Every-6-months\\\",\\\"Growth-Plan-EUR-Every-3-months\\\",\\\"Growth-Plan-EUR-Monthly\\\",\\\"Growth-Usage-Plan-USD-Yearly\\\",\\\"Growth-Usage-Plan-USD-Monthly\\\",\\\"Flexi-Plan-INR-Every-15-years\\\",\\\"BV-paused---0-BRL-Monthly\\\",\\\"Growth-Plan-USD-Every-3-months\\\",\\\"Growth-Plan-USD-Every-6-months\\\",\\\"Growth-Plan-INR-Every-3-months\\\",\\\"Growth-Plan-INR-Every-6-months\\\",\\\"Growth-Plan-BRL-Every-3-months\\\",\\\"Growth-Plan-BRL-Every-6-months\\\",\\\"Growth-Plan-HKD-Every-3-months\\\",\\\"Growth-Plan-HKD-Every-6-months\\\",\\\"Pro-Plan-USD-Every-3-months\\\",\\\"Pro-Plan-USD-Every-6-months\\\",\\\"Pro-Plan-INR-Every-3-months\\\",\\\"Pro-Plan-INR-Every-6-months\\\",\\\"Pro-Plan-BRL-Every-3-months\\\",\\\"Pro-Plan-BRL-Every-6-months\\\",\\\"Pro-Plan-HKD-Every-3-months\\\",\\\"Pro-Plan-HKD-Every-6-months\\\",\\\"Business-Plan-USD-Every-3-months\\\",\\\"Business-Plan-USD-Every-6-months\\\",\\\"Business-Plan-INR-Every-3-months\\\",\\\"Business-Plan-INR-Every-6-months\\\",\\\"Business-Plan-BRL-Every-3-months\\\",\\\"Business-Plan-BRL-Every-6-months\\\",\\\"Business-Plan-HKD-Every-3-months\\\",\\\"Business-Plan-HKD-Every-6-months\\\",\\\"Professional-Plan-Advantage-USD-Yearly\\\",\\\"Professional-Plan-Advantage-USD-Monthly\\\",\\\"Standard-Plan-Advantage-USD-Yearly\\\",\\\"Standard-Plan-Advantage-USD-Monthly\\\",\\\"Enterprise---General---WATI-USD-Yearly\\\",\\\"Standard-Plan---Enterprise-HKD-Yearly\\\",\\\"Standard-Plan---Enterprise-USD-Yearly\\\",\\\"Standard-Plan---Enterprise-USD-Monthly\\\",\\\"Enterprise---General-HKD-Monthly\\\",\\\"Enterprise---General---WATI-INR-Monthly\\\",\\\"Enterprise---General-HKD-Yearly\\\",\\\"Pro-Plan-HKD-Yearly\\\",\\\"Pro-Plan-HKD-Monthly\\\",\\\"Pro-Plan-BRL-Yearly\\\",\\\"Pro-Plan-BRL-Monthly\\\",\\\"Pro-Plan-INR-Yearly\\\",\\\"Pro-Plan-INR-Monthly\\\",\\\"Pro-Plan-USD-Yearly\\\",\\\"Pro-Plan-USD-Monthly\\\",\\\"Business-Plan-HKD-Yearly\\\",\\\"Business-Plan-HKD-Monthly\\\",\\\"Business-Plan-BRL-Yearly\\\",\\\"Business-Plan-BRL-Monthly\\\",\\\"Business-Plan-INR-Yearly\\\",\\\"Business-Plan-INR-Monthly\\\",\\\"Business-Plan-USD-Yearly\\\",\\\"Business-Plan-USD-Monthly\\\",\\\"Growth-Plan-HKD-Yearly\\\",\\\"Growth-Plan-HKD-Monthly\\\",\\\"Growth-Plan-BRL-Yearly\\\",\\\"Growth-Plan-BRL-Monthly\\\",\\\"Growth-Plan-INR-Yearly\\\",\\\"Growth-Plan-INR-Monthly\\\",\\\"Growth-Plan-USD-Yearly\\\",\\\"Growth-Plan-USD-Monthly\\\",\\\"Enterprise---General-USD-Yearly\\\",\\\"Enterprise---General-USD-Monthly\\\",\\\"Professional-Plan-BRL-Yearly\\\",\\\"Professional-Plan-BRL-Monthly\\\",\\\"Standard-Plan-BRL-Yearly\\\",\\\"Standard-Plan-BRL-Monthly\\\",\\\"WA-API-Gateway-USD-Yearly\\\",\\\"BV-paused---0-HKD-Monthly\\\",\\\"BV-paused---0-INR-Monthly\\\",\\\"BV-paused---0-USD-Monthly\\\",\\\"Standard-Plan-INR-Yearly\\\",\\\"Standard-Plan-INR-Monthly\\\",\\\"Professional-Plan-INR-Yearly\\\",\\\"Professional-Plan-INR-Monthly\\\",\\\"Developer-Plan-HKD-Yearly\\\",\\\"Developer-Plan-HKD-Monthly\\\",\\\"Professional-Plan-HKD-Yearly\\\",\\\"Professional-Plan-HKD-Monthly\\\",\\\"Standard-Plan-HKD-Yearly\\\",\\\"Standard-Plan-HKD-Monthly\\\",\\\"Professional-Plan-India-INR-Yearly\\\",\\\"Professional-Plan-India-INR-Monthly\\\",\\\"Standard-Plan-India-INR-Yearly\\\",\\\"Standard-Plan-India-INR-Monthly\\\",\\\"Developer-Plan-India-INR-Yearly\\\",\\\"Developer-Plan-India-INR-Monthly\\\",\\\"WA-API-Gateway-USD-Monthly\\\",\\\"Developer-Plan-Indonesia-USD-Yearly\\\",\\\"Developer-Plan-Indonesia-USD-Monthly\\\",\\\"Professional-Plan-Indonesia-USD-Yearly\\\",\\\"Professional-Plan-Indonesia-USD-Monthly\\\",\\\"Standard-Plan-Indonesia-USD-Yearly\\\",\\\"Standard-Plan-Indonesia-USD-Monthly\\\",\\\"Developer-Plan-Brazil-USD-Yearly\\\",\\\"Developer-Plan-Brazil-USD-Monthly\\\",\\\"Professional-Plan-Brazil-USD-Yearly\\\",\\\"Professional-Plan-Brazil-USD-Monthly\\\",\\\"Standard-Plan-Brazil-USD-Yearly\\\",\\\"Standard-Plan-Brazil-USD-Monthly\\\",\\\"Developer-Plan-India-USD-Yearly\\\",\\\"Developer-Plan-India-USD-Monthly\\\",\\\"Professional-Plan-India-USD-Yearly\\\",\\\"Professional-Plan-India-USD-Monthly\\\",\\\"Standard-Plan-India-USD-Yearly\\\",\\\"Standard-Plan-India-USD-Monthly\\\",\\\"Developer-Plan-USD-Yearly\\\",\\\"Developer-Plan-USD-Monthly\\\",\\\"Professional-Plan-USD-Yearly\\\",\\\"Professional-Plan-USD-Monthly\\\",\\\"Standard-Plan-USD-Yearly\\\",\\\"Standard-Plan-USD-Monthly\\\"]},\\\"rule_id\\\":\\\"ZLtvnjYb0k0xZ9nUEgvRD:100.00:1\\\",\\\"group\\\":\\\"ZLtvnjYb0k0xZ9nUEgvRD:100.00:1\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3351656030\\\":{\\\"name\\\":\\\"3351656030\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"5ZPVDrfXIYjYvATjBSXVM5-CunoyRQaW7rLuFov3xHPJS\\\",\\\"group\\\":\\\"5ZPVDrfXIYjYvATjBSXVM5-CunoyRQaW7rLuFov3xHPJS\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3389876171\\\":{\\\"name\\\":\\\"3389876171\\\",\\\"value\\\":{},\\\"rule_id\\\":\\\"default\\\",\\\"group\\\":\\\"default\\\",\\\"is_device_based\\\":false,\\\"passed\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"3879789560\\\":{\\\"name\\\":\\\"3879789560\\\",\\\"value\\\":{\\\"scheduleIntervalHours\\\":24,\\\"scheduleV1Enabled\\\":true,\\\"engagementMetricsDailyWriteMode\\\":3,\\\"isDataFromBQ\\\":true},\\\"rule_id\\\":\\\"5O27fy8SkidWXhaUPvcevT:100.00:1\\\",\\\"group\\\":\\\"5O27fy8SkidWXhaUPvcevT:100.00:1\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4129906326\\\":{\\\"name\\\":\\\"4129906326\\\",\\\"value\\\":{\\\"link\\\":{\\\"Growth-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-W.pdf\\\",\\\"Growth-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-L.pdf\\\",\\\"Growth-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-E.pdf\\\",\\\"Growth-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-M.pdf\\\",\\\"Growth-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-G.pdf\\\",\\\"Growth-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-I.pdf\\\",\\\"Growth-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Growth-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Pro-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-W.pdf\\\",\\\"Pro-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-L.pdf\\\",\\\"Pro-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-E.pdf\\\",\\\"Pro-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-M.pdf\\\",\\\"Pro-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-G.pdf\\\",\\\"Pro-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-USD-I.pdf\\\",\\\"Pro-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Pro-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Growth-Plan-Pro-Plan-INR-I.pdf\\\",\\\"Enterprise-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Enterprise-Plan-INR-I.pdf\\\",\\\"Enterprise-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Enterprise-Plan-INR-I.pdf\\\",\\\"Business-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-W.pdf\\\",\\\"Business-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-L.pdf\\\",\\\"Business-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-E.pdf\\\",\\\"Business-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-M.pdf\\\",\\\"Business-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-G.pdf\\\",\\\"Business-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-USD-I.pdf\\\",\\\"Business-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-INR-I.pdf\\\",\\\"Business-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Business-Plan-INR-I.pdf\\\",\\\"Flexi-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-USD-I.pdf\\\",\\\"Flexi-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-INR-I.pdf\\\",\\\"Flexi-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-USD-I.pdf\\\",\\\"Flexi-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Flexi-Plan-INR-I.pdf\\\",\\\"Lite-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Lite-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Lite-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Lite-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Lite-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Lite-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Lite-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Lite-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Standard-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Standard-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Standard-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Standard-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Standard-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Standard-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Standard-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Standard-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Professional-Plan-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Professional-Plan-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Professional-Plan-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Professional-Plan-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Professional-Plan-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Professional-Plan-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Professional-Plan-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Professional-Plan-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Enterprise-USD-WEST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-W.pdf\\\",\\\"Enterprise-USD-LATAM\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-L.pdf\\\",\\\"Enterprise-USD-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-E.pdf\\\",\\\"Enterprise-USD-ME\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-M.pdf\\\",\\\"Enterprise-USD-GCR\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-G.pdf\\\",\\\"Enterprise-USD-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-USD-I.pdf\\\",\\\"Enterprise-INR-INDIA\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\",\\\"Enterprise-INR-EAST\\\":\\\"https://cdn.clare.ai/pricing/Wati-Pricing-Rate-Card-Standard-Professional-Plan-INR-I.pdf\\\"}},\\\"rule_id\\\":\\\"4KViahiIJytWLfTZoF5H2c:100.00:2\\\",\\\"group\\\":\\\"4KViahiIJytWLfTZoF5H2c:100.00:2\\\",\\\"is_device_based\\\":false,\\\"passed\\\":true,\\\"id_type\\\":\\\"userID\\\",\\\"secondary_exposures\\\":[]},\\\"4168958031\\\":{\\\"name\\\":\\\"4168958031\\\",\\\"value\\\":{\\\"number-of-buttons\\\":2},\\\"rule_id\\\":\\\"launchedGroup\\\",\\\"group\\\":\\\"launchedGroup\\\",\\\"group_name\\\":\\\"Control\\\",\\\"is_device_based\\\":false,\\\"id_type\\\":\\\"userID\\\",\\\"is_experiment_active\\\":false,\\\"is_user_in_experiment\\\":false,\\\"secondary_exposures\\\":[]}},\\\"layer_configs\\\":{},\\\"sdkParams\\\":{},\\\"has_updates\\\":true,\\\"generator\\\":\\\"scrapi-nest\\\",\\\"time\\\":1761748041336,\\\"company_lcut\\\":1761748041336,\\\"evaluated_keys\\\":{\\\"stableID\\\":\\\"497c51b6-fc99-4530-9dc3-a4ad1a23caaf\\\"},\\\"hash_used\\\":\\\"djb2\\\",\\\"derived_fields\\\":{\\\"ip\\\":\\\"49.43.32.169\\\",\\\"country\\\":\\\"IN\\\",\\\"browserName\\\":\\\"Chrome\\\",\\\"browserVersion\\\":\\\"141.0.0\\\",\\\"osName\\\":\\\"Windows\\\",\\\"osVersion\\\":\\\"10.0.0\\\",\\\"browser_name\\\":\\\"Chrome\\\",\\\"browser_version\\\":\\\"141.0.0\\\",\\\"os_name\\\":\\\"Windows\\\",\\\"os_version\\\":\\\"10.0.0\\\"},\\\"hashed_sdk_key_used\\\":\\\"3368523838\\\",\\\"can_record_session\\\":true,\\\"recording_blocked\\\":false,\\\"session_recording_rate\\\":1,\\\"auto_capture_settings\\\":{\\\"disabled_events\\\":{}}}\",\"receivedAt\":1761751571901,\"stableID\":\"497c51b6-fc99-4530-9dc3-a4ad1a23caaf\",\"fullUserHash\":\"2443356383\"}"
        },
        {
          "name": "debug",
          "value": "undefined"
        },
        {
          "name": "ajs_user_id",
          "value": "null"
        },
        {
          "name": "userFilter",
          "value": "{\"visionsjersey@gmail.com\":{\"filterType\":5,\"filterAttribute\":[],\"filterAssignee\":[],\"filterStatus\":[],\"filterTeams\":[],\"filterTopicNames\":[]}}"
        }
      ]
    },
    {
      "origin": "https://auth.wati.io",
      "localStorage": [
        {
          "name": "i18nextLng",
          "value": "en"
        }
      ]
    },
    {
      "origin": "https://feedback.wati.io",
      "localStorage": [
        {
          "name": "beacon_sid",
          "value": "4f3b78ceb332c535ac5d9804f1e807ee"
        },
        {
          "name": "boostersViewsMap",
          "value": "{\"modal\":{\"id\":null,\"count\":0},\"bar\":{\"id\":null,\"count\":0},\"overlay\":{\"id\":null,\"count\":0},\"nps\":{\"id\":null,\"count\":0}}"
        }
      ]
    }
  ]
}
